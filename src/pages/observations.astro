---
import MainLayout from '../layouts/MainLayout.astro';

// Complete episode data for all episodes
const episodes = [
  {
    number: 31,
    title: "Building client-side URL-based state apps using Claude 4 and Lovable",
    heroImg: "/images/thumbnails/ep31.png",
    tags: ["Claude", "Lovable", "AI Development", "Developer Tools", "Productivity"],
    takeaways: [
      "AI tools can act as a 'second brain' for capturing fleeting ideas",
      "Free plans with limitations can spark creativity through constraints",
      "URL-based state management enables privacy-focused applications",
      "Rapid prototyping with AI tools reduces cognitive load and speeds iteration"
    ],
    tools: ["Claude", "Lovable", "AI Development", "Developer Tools", "Productivity"],
    concepts: ["URL State Management", "Privacy-First Design", "Rapid Prototyping", "AI-Assisted Development"],
    path: "/episodes/ep31"
  },  
  {
    number: 30,
    title: "Maximizing AI with Cursor: Building MCP Servers for Seamless Workflow",
    heroImg: "/images/thumbnails/ep30.png",
    tags: ["MCP", "Cursor", "AI Development", "Developer Tools", "Documentation"],
    takeaways: [
      "MCP servers can automate engineering journal creation from Git commits and AI chats",
      "Weekend 'vibe coding' can lead to solving real productivity problems",
      "AI tools work best when they support rather than replace human thinking",
      "Context preservation is crucial for effective AI-assisted development"
    ],
    tools: ["MCP", "Cursor", "AI Development", "Developer Tools", "Documentation"],
    concepts: ["Model Context Protocol", "Engineering Journals", "Automated Documentation", "Developer Productivity"],
    path: "/episodes/ep30"
  },
  {
    number: 29,
    title: "Exploring Gemini 2.5 Pro: A New AI Frontier", 
    heroImg: "/images/thumbnails/ep29.png",
    tags: ["Gemini", "AI Development", "Coding", "Visualization"],
    takeaways: [
      "Gemini 2.5 Pro offers impressive million token context window capabilities",
      "Context caching significantly aids in handling large projects",
      "AI models can create sophisticated educational content blending math and programming",
      "Speed of AI output generation continues to improve dramatically"
    ],
    tools: ["Gemini", "AI Development", "Coding", "Visualization"],
    concepts: ["Large Context Windows", "Context Caching", "Educational AI", "Mathematical Visualization"],
    path: "/episodes/ep29"
  },
  {
    number: 28,
    title: "Exploring eBPF with AI Tools: Insights and Applications",
    heroImg: "/images/thumbnails/ep28.png", 
    tags: ["eBPF", "ChatGPT", "GitHub Copilot", "System Monitoring"],
    takeaways: [
      "eBPF provides intimate control over operating system kernel functions",
      "AI tools can accelerate learning of complex technologies like eBPF",
      "Iterative development with multiple AI platforms improves code quality",
      "AI significantly expedites development by providing foundational code quickly"
    ],
    tools: ["eBPF", "ChatGPT", "GitHub Copilot", "System Monitoring"],
    concepts: ["Kernel Programming", "System Observability", "Security Monitoring", "AI-Assisted Learning"],
    path: "/episodes/ep28"
  },
  {
    number: 27,
    title: "Exploring Coding Efficiency: Utilizing Tmux and Claude Code for AI-Powered Ray Tracing",
    heroImg: "/images/thumbnails/ep27.png",
    tags: ["Tmux", "Claude Code", "Terminal", "Helix"],
    takeaways: [
      "Terminal multiplexers like Tmux enhance productivity in AI-assisted coding",
      "High-level prompts can guide AI to develop complex projects autonomously",
      "Thorough conceptual frameworks are essential before AI execution",
      "AI tools integrate seamlessly into existing developer workflows"
    ],
    tools: ["Tmux", "Claude Code", "Terminal", "Helix"],
    concepts: ["Terminal Multiplexing", "AI-Guided Development", "Ray Tracing", "Workflow Integration"],
    path: "/episodes/ep27"
  },
  {
    number: 26,
    title: "Automating Content Transformation with N8N and Generative AI",
    heroImg: "/images/thumbnails/ep26.png",
    tags: ["N8N", "Automation", "Airtable", "Workflow"],
    takeaways: [
      "N8N workflows can automate complex content transformation tasks",
      "AI agents can manipulate and enhance content systematically",
      "Automation tools bridge the gap between content creation and distribution",
      "Follow-up workflows can extract additional value from existing content"
    ],
    tools: ["N8N", "Automation", "Airtable", "Workflow"],
    concepts: ["Content Automation", "Workflow Design", "AI Agents", "Content Transformation"],
    path: "/episodes/ep26"
  },
  {
    number: 24,
    title: "Streamlining AI Report Analysis: Figma AI 2025 Insights",
    heroImg: "/images/thumbnails/ep24.png",
    tags: ["Claude", "State of AI", "Productivity"],
    takeaways: [
      "AI tools can efficiently summarize and analyze complex industry reports",
      "Claude Desktop excels at extracting meaningful insights from PDFs",
      "Comparing multiple reports provides comprehensive understanding of trends",
      "Auto-generated summaries require careful validation in professional settings"
    ],
    tools: ["Claude", "State of AI", "Productivity"],
    concepts: ["Report Analysis", "Trend Identification", "Information Synthesis", "Professional Validation"],
    path: "/episodes/ep24"
  },
  {
    number: 20,
    title: "YOLO Coding: Migrating from Static HTML to Astro with AI Tools",
    heroImg: "/images/thumbnails/ep20.png",
    tags: ["Puppeteer", "MCP", "Gemini", "Claude", "Astro"],
    takeaways: [
      "YOLO Mode coding can lead to successful large-scale migrations",
      "Multiple AI models with MCP tools provide complementary capabilities",
      "Visual context through screenshots improves AI understanding",
      "AI-assisted migrations require careful handling of complex assets"
    ],
    tools: ["Puppeteer", "MCP", "Gemini", "Claude", "Astro"],
    concepts: ["Site Migration", "Multimodal AI", "Visual Context", "Framework Conversion"],
    path: "/episodes/ep20"
  },
  {
    number: 17,
    title: "The State of AI 2025: Exploring Developer Tools, Models, and Industry Trends",
    heroImg: "/images/thumbnails/ep17.png",
    tags: ["State of AI", "Notebook LM", "Claude", "ChatGPT"],
    takeaways: [
      "State of AI reports provide valuable insights into developer tool adoption",
      "Notebook LM excels at synthesizing information from multiple sources",
      "AI tool popularity varies significantly across different developer segments",
      "Pain points in AI tools often center around context and consistency"
    ],
    tools: ["State of AI", "Notebook LM", "Claude", "ChatGPT"],
    concepts: ["Industry Analysis", "Tool Adoption", "Developer Preferences", "Market Trends"],
    path: "/episodes/ep17"
  },
  {
    number: 16,
    title: "Enhancing CSS Editing with LLMs: Using Puppeteer for Visual Context",
    heroImg: "/images/thumbnails/ep16.png",
    tags: ["Puppeteer", "MCP", "Gemini", "CSS"],
    takeaways: [
      "Visual context through screenshots dramatically improves CSS editing with AI",
      "Puppeteer MCP integration creates a virtuous cycle for design improvements",
      "Large CSS codebases benefit from AI assistance with visual feedback",
      "Modern CSS syntax can be challenging for developers familiar with older versions"
    ],
    tools: ["Puppeteer", "MCP", "Gemini", "CSS"],
    concepts: ["Visual Context", "CSS Editing", "Design Feedback", "Code Visualization"],
    path: "/episodes/ep16"
  },
  {
    number: 15,
    title: "AI Tools in Action: Exploring Sora Image Generation and Lovable App Builder",
    heroImg: "/images/thumbnails/ep15.png",
    tags: ["Lovable", "Sora", "Image Generation", "AI Development"],
    takeaways: [
      "Sora has significantly improved text rendering in generated images",
      "AI image generation now produces professional-looking fonts with proper kerning",
      "Generative AI quality has reached a point where 'AI slop' is less common",
      "Y2K aesthetic and 3D cartoon styles work particularly well with current AI tools"
    ],
    tools: ["Lovable", "Sora", "Image Generation", "AI Development"],
    concepts: ["Text Rendering", "Font Quality", "Aesthetic Styles", "Visual Quality"],
    path: "/episodes/ep15"
  },
  {
    number: 14,
    title: "Claude 3.7 Sonnet Plugins: AI Integration with Gmail, Drive and Calendar",
    heroImg: "/images/thumbnails/ep14.png",
    tags: ["Claude", "Plugins", "Productivity"],
    takeaways: [
      "Claude Desktop integrates seamlessly with Gmail, Google Drive, and Calendar",
      "AI can analyze massive email volumes and generate personalized dashboards",
      "Interactive React-based artifacts provide customized productivity tools",
      "Email management becomes engaging when gamified through AI assistance"
    ],
    tools: ["Claude", "Plugins", "Productivity"],
    concepts: ["Email Management", "Calendar Integration", "Productivity Dashboards", "OAuth Integration"],
    path: "/episodes/ep14"
  },
  {
    number: 13,
    title: "Exploring Bolt: Rapid App Development with AI-Powered Templates",
    heroImg: "/images/thumbnails/ep13.png",
    tags: ["Bolt", "AI Development"],
    takeaways: [
      "Bolt enables rapid prototyping through template-based development",
      "'Vibe coding' allows quick concept visualization before deeper development",
      "Browser-based AI development tools excel at exploration and experimentation",
      "Screenshot-based programming can quickly recreate interfaces from images"
    ],
    tools: ["Bolt", "AI Development"],
    concepts: ["Rapid Prototyping", "Template Development", "Vibe Coding", "Browser-Based IDEs"],
    path: "/episodes/ep13"
  },
  {
    number: 12,
    title: "Cursor Rules, Firebase Studio, and the Evolving IDE Landscape",
    heroImg: "/images/thumbnails/ep12.png",
    tags: ["Cursor", "ML Models", "Productivity", "Firebase"],
    takeaways: [
      "Cursor Rules help combat 'AI amnesia' by preserving context between sessions",
      "Project requirement documents reduce repetitive instructions in AI coding",
      "Firebase Studio represents cloud providers' move into AI-powered IDEs",
      "Context preservation is crucial for effective AI-assisted development workflows"
    ],
    tools: ["Cursor", "ML Models", "Productivity", "Firebase"],
    concepts: ["Context Preservation", "AI Amnesia", "Cloud IDEs", "Development Workflows"],
    path: "/episodes/ep12"
  },
  {
    number: 11,
    title: "Exploring Llama 4, OpenRouter, and Model Comparison Tools",
    heroImg: "/images/thumbnails/ep11.png",
    tags: ["Cursor", "ML Models", "Productivity"],
    takeaways: [
      "Llama 4's massive context window may reduce the need for RAG systems",
      "Large context windows enable more detailed system prompts and guardrails",
      "Model comparison platforms help identify unexpected high-performing models",
      "OpenRouter and LM Arena provide valuable tools for testing AI models side by side"
    ],
    tools: ["Cursor", "ML Models", "Productivity"],
    concepts: ["Context Windows", "Model Comparison", "RAG Systems", "Prompt Engineering"],
    path: "/episodes/ep11"
  },
  {
    number: 10,
    title: "First Look at Windsurf & Model Context Protocol (MCP)",
    heroImg: "/images/thumbnails/ep10.png",
    tags: ["Web Development"],
    takeaways: [
      "Windsurf offers unique AI coding workflows compared to Cursor",
      "Product Requirements Documents (PRDs) improve AI project planning",
      "Model Context Protocol (MCP) is emerging as a standard for AI tool integration",
      "Planning before coding leads to better results with AI assistants"
    ],
    tools: ["Web Development"],
    concepts: ["AI Workflows", "Project Planning", "Protocol Standards", "Development Planning"],
    path: "/episodes/ep10"
  },
  {
    number: 9,
    title: "From GTC to Website Building with AI Tools",
    heroImg: "/images/thumbnails/ep09.png",
    tags: ["Web Development"],
    takeaways: [
      "NVIDIA's GTC conference showcases cutting-edge AI advancements",
      "AI tools can be applied to practical website development tasks",
      "Conference insights translate into actionable development techniques",
      "Staying current with AI developments informs better tool selection"
    ],
    tools: ["Web Development"],
    concepts: ["Conference Insights", "AI Advancements", "Practical Applications", "Tool Selection"],
    path: "/episodes/ep09"
  },
  {
    number: 8,
    title: "Using Cursor and Claude to Fix CSS Layout Issues",
    heroImg: "/images/thumbnails/ep08.png",
    tags: ["Cursor", "Claude", "Debugging", "Web Development"],
    takeaways: [
      "AI-powered debugging can quickly identify complex CSS layout problems",
      "Cursor's AI assistance excels at systematic problem-solving approaches",
      "Visual debugging with AI reduces time spent on layout troubleshooting",
      "Step-by-step AI guidance helps understand the root causes of CSS issues"
    ],
    tools: ["Cursor", "Claude", "Debugging", "Web Development"],
    concepts: ["CSS Debugging", "Layout Problems", "Visual Debugging", "Systematic Problem-Solving"],
    path: "/episodes/ep08"
  },
  {
    number: 7,
    title: "Using Cursor and Claude to Solve Record Search Bugs",
    heroImg: "/images/thumbnails/ep07.png",
    tags: ["Cursor", "Claude", "Debugging"],
    takeaways: [
      "AI debugging sessions can systematically identify complex search functionality bugs",
      "Cursor IDE provides effective tools for collaborative AI problem-solving",
      "Record management systems benefit from AI-assisted debugging approaches",
      "Complex bugs often require iterative AI assistance to fully resolve"
    ],
    tools: ["Cursor", "Claude", "Debugging"],
    concepts: ["Bug Identification", "Search Functionality", "Record Management", "Iterative Debugging"],
    path: "/episodes/ep07"
  },
  {
    number: 6,
    title: "Using Claude Code to Make Changes to My Personal Website",
    heroImg: "/images/thumbnails/ep06.png",
    tags: ["Web Development", "Claude"],
    takeaways: [
      "Claude Code can handle substantial website changes from planning to execution",
      "Personal website modifications provide good testing grounds for AI tools",
      "AI assistance helps with both implementation and troubleshooting phases",
      "Real-world projects reveal both capabilities and limitations of AI coding tools"
    ],
    tools: ["Web Development", "Claude"],
    concepts: ["Website Modification", "Personal Projects", "Implementation Planning", "Real-World Testing"],
    path: "/episodes/ep06"
  },
  {
    number: 5,
    title: "Using Claude Code for Automated HTML Updates and Styling",
    heroImg: "/images/thumbnails/ep05.png",
    tags: ["Web Development", "Claude"],
    takeaways: [
      "Claude Code can automate repetitive HTML updates across multiple pages",
      "Consistent styling application becomes efficient with AI assistance",
      "Automated updates improve website maintainability and reduce manual errors",
      "AI tools excel at applying systematic changes across large codebases"
    ],
    tools: ["Web Development", "Claude"],
    concepts: ["HTML Automation", "Consistent Styling", "Website Maintenance", "Systematic Updates"],
    path: "/episodes/ep05"
  },
  {
    number: 4,
    title: "Building a Secure Feedback Form with Datadog Logs with Claude Code",
    heroImg: "/images/thumbnails/ep04.png",
    tags: ["Web Development", "Claude"],
    takeaways: [
      "AI can help build secure forms with proper validation and logging",
      "Datadog integration provides robust logging solutions for user feedback",
      "Security considerations are important when building user-facing forms",
      "Claude Code assists with both frontend and backend implementation"
    ],
    tools: ["Web Development", "Claude"],
    concepts: ["Form Security", "User Feedback", "Logging Integration", "Full-Stack Development"],
    path: "/episodes/ep04"
  },
  {
    number: 3,
    title: "Automatic1111 and Local Text-to-Image Generation",
    heroImg: "/images/thumbnails/ep03.png",
    tags: ["Image Generation"],
    takeaways: [
      "Automatic1111 provides powerful local text-to-image generation capabilities",
      "Local generation offers privacy and control over image creation processes",
      "Prompt engineering techniques significantly impact image quality and accuracy",
      "Extensions like ControlNet provide additional control over image generation"
    ],
    tools: ["Image Generation"],
    concepts: ["Local Generation", "Prompt Engineering", "Image Control", "Privacy-First AI"],
    path: "/episodes/ep03"
  },
  {
    number: 2,
    title: "Exploring Warp Terminal and Cursor for Productivity",
    heroImg: "/images/thumbnails/ep02.png",
    tags: ["Productivity", "Cursor"],
    takeaways: [
      "Warp Terminal enhances developer productivity with AI-powered features",
      "Cursor IDE significantly boosts coding efficiency through AI assistance",
      "AI-enhanced tools integrate seamlessly into existing developer workflows",
      "Terminal and IDE improvements compound to create substantial productivity gains"
    ],
    tools: ["Productivity", "Cursor"],
    concepts: ["Developer Productivity", "AI-Enhanced Tools", "Workflow Integration", "Terminal Enhancement"],
    path: "/episodes/ep02"
  },
  {
    number: 1,
    title: "Building Quick Web Interfaces for Machine Learning Models",
    heroImg: "/images/thumbnails/ep01.png",
    tags: ["Web Development", "ML Models"],
    takeaways: [
      "Gradio enables rapid web interface creation for ML models",
      "Non-technical users can interact with complex ML systems through simple interfaces",
      "Backend developers can create frontends without extensive JavaScript knowledge",
      "Quick prototyping of ML features becomes accessible through Gradio"
    ],
    tools: ["Web Development", "ML Models"],
    concepts: ["ML Interfaces", "Rapid Prototyping", "User Accessibility", "Backend-to-Frontend"],
    path: "/episodes/ep01"
  }
].sort((a, b) => b.number - a.number);

// Get unique tools for filters
const allTools = [...new Set(episodes.flatMap(ep => ep.tools))].sort();
---

<MainLayout title="Observations & Insights" hideEpisodesLink={true}>
    <main class="container about-section">
        <div class="about-header">
            <h1>Observations & Insights</h1>
            <p>Discover patterns, insights, and key takeaways from our AI tools exploration journey. Filter by tools, technologies, or concepts to focus on specific areas of interest.</p>
        </div>
        
        <!-- Mobile tab navigation for small screens -->
        <div class="mobile-tabs">
            <div class="mobile-tab active" data-view="takeaways">Takeaways</div>
        </div>
        
        <div class="observations-layout">
            <!-- Sidebar with filters -->
            <div class="observations-sidebar">
                <div class="filter-group">
                    <h3>Search</h3>
                    <input type="text" class="filter-search" placeholder="Search takeaways..." id="search-input">
                </div>
                
                <div class="filter-group">
                    <h3>Tools & Technologies</h3>
                    <div class="filters-container" id="tools-filters">
                        {allTools.map(tool => (
                            <div class="filter-item" data-filter="tool" data-value={tool.toLowerCase()}>
                                <span>{tool}</span>
                                <span class="count">{episodes.filter(ep => ep.tools.some(t => t.toLowerCase() === tool.toLowerCase())).length}</span>
                            </div>
                        ))}
                    </div>
                </div>
                
                <button class="reset-filters" id="reset-filters">Reset All Filters</button>
            </div>
            
            <!-- Main content area -->
            <div class="observations-content">
                <div class="takeaway-cards" id="takeaway-cards">
                    {episodes.map(episode => (
                        <div class="takeaway-card" 
                             data-episode={episode.number} 
                             data-tools={episode.tools.map(t => t.toLowerCase()).join(',')} 
                             data-concepts={episode.concepts.map(c => c.toLowerCase()).join(',')}>
                            <div class="takeaway-card-header">
                                <a href={episode.path} class="header-link">
                                    <img src={episode.heroImg} alt={`Episode ${episode.number} Thumbnail`}>
                                    <div class="takeaway-card-header-content">
                                        <div class="episode-number">Episode {episode.number}</div>
                                        <h3>{episode.title}</h3>
                                    </div>
                                </a>
                            </div>
                            <div class="takeaway-card-body">
                                <div class="takeaway-card-tags">
                                    {episode.tags.map(tag => (
                                        <span class="takeaway-tag">{tag}</span>
                                    ))}
                                </div>
                                <div class="takeaway-content">
                                    <ul>
                                        {episode.takeaways.map(takeaway => (
                                            <li>{takeaway}</li>
                                        ))}
                                    </ul>
                                </div>
                            </div>
                            <div class="takeaway-card-footer">
                                <a href={episode.path} target='_blank'>View Full Episode →</a>
                            </div>
                        </div>
                    ))}
                </div>
                
                <!-- Empty state for when no results match filters -->
                <div class="empty-state" id="empty-state" style="display: none;">
                    <h3>No takeaways found</h3>
                    <p>Try adjusting your filters or search terms to find relevant insights.</p>
                </div>
            </div>
        </div>
    </main>
</MainLayout>

<style>
    /* Main layout improvements */
    .observations-layout {
        display: grid;
        grid-template-columns: 260px 1fr;
        gap: 30px;
        position: relative;
    }
    
    /* Sidebar styling */
    .observations-sidebar {
        position: sticky;
        top: 20px;
        height: calc(100vh - 100px);
        overflow-y: auto;
        padding-right: 15px;
        scrollbar-width: thin;
    }
    
    .observations-sidebar::-webkit-scrollbar {
        width: 6px;
    }
    
    .observations-sidebar::-webkit-scrollbar-thumb {
        background-color: #ddd;
        border-radius: 6px;
    }
    
    .observations-content {
        min-height: 500px;
    }
    
    /* Filter group styling */
    .filter-group {
        margin-bottom: 25px;
        background: #f8f9ff;
        border-radius: 12px;
        padding: 15px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    }
    
    .filter-group h3 {
        margin-top: 0;
        margin-bottom: 12px;
        font-size: 1rem;
        color: #333;
        border-bottom: 1px solid #e5e7eb;
        padding-bottom: 8px;
    }
    
    /* Tool filters */
    .filters-container {
        display: flex;
        flex-direction: column;
        gap: 8px;
        max-height: 300px;
        overflow-y: auto;
        padding-right: 5px;
    }
    
    .filter-item {
        display: flex;
        align-items: center;
        gap: 8px;
        padding: 8px 10px;
        border-radius: 6px;
        cursor: pointer;
        transition: all 0.2s ease;
        font-size: 0.9rem;
    }
    
    .filter-item:hover {
        background-color: #f0f0ff;
    }
    
    .filter-item.active {
        background-color: #e6e6ff;
        font-weight: 500;
    }
    
    .filter-item .count {
        margin-left: auto;
        background-color: #e2e2fe;
        border-radius: 12px;
        padding: 2px 8px;
        font-size: 0.75rem;
        color: #4f46e5;
    }
    
    /* Search styling */
    .filter-search {
        width: 100%;
        padding: 8px 12px;
        border: 1px solid #ddd;
        border-radius: 6px;
        margin-bottom: 10px;
        font-size: 0.9rem;
    }
    
    .filter-search:focus {
        outline: none;
        border-color: #7c4dff;
        box-shadow: 0 0 0 2px rgba(124, 77, 255, 0.2);
    }
    
    /* Reset filters button */
    .reset-filters {
        display: block;
        width: 100%;
        padding: 8px;
        background-color: #f8f8f8;
        border: 1px solid #e0e0e0;
        border-radius: 6px;
        text-align: center;
        margin-top: 10px;
        cursor: pointer;
        transition: all 0.2s ease;
        font-size: 0.9rem;
    }
    
    .reset-filters:hover {
        background-color: #e8e8e8;
    }
    
    /* Takeaway cards styling */
    .takeaway-cards {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 20px;
    }
    
    .takeaway-card {
        background-color: #fff;
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
        overflow: hidden;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        height: 100%;
        display: flex;
        flex-direction: column;
    }
    
    .takeaway-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.12);
    }
    
    .takeaway-card-header {
        height: 140px;
        position: relative;
        overflow: hidden;
    }
    
    .takeaway-card-header .header-link {
        display: block;
        width: 100%;
        height: 100%;
        text-decoration: none;
        color: inherit;
        cursor: pointer;
    }
    
    .takeaway-card-header img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
    }
    
    .takeaway-card:hover .takeaway-card-header img {
        transform: scale(1.05);
    }
    
    .takeaway-card-header-content {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        padding: 12px 16px;
        background: linear-gradient(0deg, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%);
        color: white;
    }
    
    .takeaway-card-header h3 {
        margin: 0;
        font-size: 1rem;
        font-weight: 600;
        text-shadow: 0 1px 2px rgba(0,0,0,0.5);
    }
    
    .takeaway-card-header .episode-number {
        font-size: 0.8rem;
        margin-bottom: 4px;
        text-shadow: 0 1px 2px rgba(0,0,0,0.5);
    }
    
    .takeaway-card-body {
        padding: 16px;
        flex-grow: 1;
        display: flex;
        flex-direction: column;
    }
    
    .takeaway-card-tags {
        display: flex;
        flex-wrap: wrap;
        gap: 6px;
        margin-bottom: 12px;
    }
    
    .takeaway-tag {
        background-color: #f0f0ff;
        color: #4f46e5;
        font-size: 0.75rem;
        padding: 3px 8px;
        border-radius: 12px;
    }
    
    .takeaway-content {
        flex-grow: 1;
    }
    
    .takeaway-content ul {
        padding-left: 5px;
        margin: 0;
        list-style-type: none;
    }
    
    .takeaway-content li {
        margin-bottom: 12px;
        font-size: 0.9rem;
        line-height: 1.5;
        position: relative;
        padding-left: 24px;
    }
    
    .takeaway-content li:before {
        content: "";
        position: absolute;
        left: 0;
        top: 5px;
        width: 10px;
        height: 10px;
        background-color: #7c4dff;
        border-radius: 50%;
        opacity: 0.8;
    }
    
    .takeaway-content li:hover:before {
        background-color: #6366f1;
        transform: scale(1.2);
        transition: all 0.2s ease;
    }
    
    .takeaway-card-footer {
        padding: 12px 16px;
        background-color: #f8f9ff;
        border-top: 1px solid #eee;
        text-align: right;
    }
    
    .takeaway-card-footer a {
        color: #4f46e5;
        text-decoration: none;
        font-size: 0.85rem;
        font-weight: 500;
    }
    
    .takeaway-card-footer a:hover {
        text-decoration: underline;
    }
    
    /* Empty state */
    .empty-state {
        text-align: center;
        padding: 40px 20px;
        background-color: #f8f9ff;
        border-radius: 12px;
        margin: 40px 0;
    }
    
    .empty-state h3 {
        margin-top: 0;
        color: #666;
    }
    
    .empty-state p {
        color: #888;
        max-width: 400px;
        margin: 0 auto;
    }
    
    /* Mobile responsive */
    @media (max-width: 768px) {
        .observations-layout {
            grid-template-columns: 1fr;
        }
        
        .observations-sidebar {
            position: relative;
            height: auto;
            margin-bottom: 20px;
        }
        
        .takeaway-cards {
            grid-template-columns: 1fr;
        }
    }
    
    /* Tab navigation for mobile */
    .mobile-tabs {
        display: none;
        overflow-x: auto;
        white-space: nowrap;
        margin-bottom: 20px;
        padding-bottom: 8px;
        scrollbar-width: none;
    }
    
    .mobile-tabs::-webkit-scrollbar {
        display: none;
    }
    
    .mobile-tab {
        display: inline-block;
        padding: 8px 16px;
        background-color: #f0f0ff;
        border-radius: 20px;
        margin-right: 8px;
        font-size: 0.9rem;
        cursor: pointer;
    }
    
    .mobile-tab.active {
        background-color: #7c4dff;
        color: white;
        font-weight: 500;
    }
    
    @media (max-width: 768px) {
        .mobile-tabs {
            display: block;
        }
    }
</style>

<script>
    // Filter functionality
    document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.getElementById('search-input') as HTMLInputElement;
        const filterItems = document.querySelectorAll('.filter-item');
        const takeawayCards = document.querySelectorAll('.takeaway-card') as NodeListOf<HTMLElement>;
        const emptyState = document.getElementById('empty-state') as HTMLElement;
        const resetButton = document.getElementById('reset-filters') as HTMLElement;
        
        let activeFilters = {
            search: '',
            tools: [] as string[]
        };
        
        // Search functionality
        searchInput?.addEventListener('input', function() {
            activeFilters.search = this.value.toLowerCase();
            filterCards();
        });
        
        // Filter item clicks
        filterItems.forEach(item => {
            item.addEventListener('click', function() {
                const filterType = (this as HTMLElement).dataset.filter;
                const filterValue = (this as HTMLElement).dataset.value;
                
                this.classList.toggle('active');
                
                if (filterType === 'tool' && filterValue) {
                    if (this.classList.contains('active')) {
                        activeFilters.tools.push(filterValue);
                    } else {
                        activeFilters.tools = activeFilters.tools.filter(t => t !== filterValue);
                    }
                }
                
                filterCards();
            });
        });
        
        // Reset filters
        resetButton?.addEventListener('click', function() {
            activeFilters = { search: '', tools: [] };
            if (searchInput) searchInput.value = '';
            filterItems.forEach(item => item.classList.remove('active'));
            filterCards();
        });
        
        // Filter cards based on active filters
        function filterCards() {
            let visibleCount = 0;
            
            takeawayCards.forEach(card => {
                let shouldShow = true;
                
                // Search filter
                if (activeFilters.search) {
                    const cardText = card.textContent?.toLowerCase() || '';
                    if (!cardText.includes(activeFilters.search)) {
                        shouldShow = false;
                    }
                }
                
                // Tools filter
                if (activeFilters.tools.length > 0) {
                    const cardTools = (card.dataset.tools || '').split(',');
                    const hasMatchingTool = activeFilters.tools.some(tool => 
                        cardTools.some(cardTool => cardTool.includes(tool))
                    );
                    if (!hasMatchingTool) {
                        shouldShow = false;
                    }
                }
                
                if (shouldShow) {
                    card.style.display = 'flex';
                    visibleCount++;
                } else {
                    card.style.display = 'none';
                }
            });
            
            // Show/hide empty state
            if (emptyState) {
                if (visibleCount === 0) {
                    emptyState.style.display = 'block';
                } else {
                    emptyState.style.display = 'none';
                }
            }
        }
    });
</script> 