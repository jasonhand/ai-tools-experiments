---
import MainLayout from './MainLayout.astro';
import EpisodeNavigation from '../components/EpisodeNavigation.astro';

const { frontmatter, headings, url } = Astro.props;
interface Heading { depth: number; text: string; }
const pageTitle = headings.find((h: Heading) => h.depth === 1)?.text || 'Untitled';

// Extract current episode number from url (e.g. "ep01" from "/episodes/ep01")
const currentEpisode = url.split('/').pop() || '';
---
<MainLayout title={pageTitle} hideEpisodesLink={true}>
    <main class="container">
        <div>
            <div class="episode-content">
                <br />
                <div class="video-container">
                    <a href={`https://www.youtube.com/watch?v=${frontmatter.VideoID}`} target="_blank" rel="noopener noreferrer" class="youtube-link">
                        <img src={frontmatter.HeroImg} alt={`Episode ${frontmatter.EpisodeNumber} Thumbnail`} />
                        <span class="play-icon" style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); width: 0; height: 0; border-style: solid; border-width: 15px 0 15px 25px; border-color: transparent transparent transparent #6C756B; z-index: 10; opacity: 0.9;"></span>
                    </a>
                </div>
                <article class="markdown-content">
                    <h1>{frontmatter.Title}</h1>
                    <slot />
                </article>            
            </div>
        </div>
    </main>
    
    <EpisodeNavigation currentEpisode={currentEpisode} />
</MainLayout>

<script>
    // Ensure hero image link works properly
    document.addEventListener('DOMContentLoaded', function() {
        const heroLink = document.querySelector('.episode-content .video-container a');
        if (heroLink) {
            // Force the link to be clickable
            heroLink.style.position = 'relative';
            heroLink.style.zIndex = '10';
            heroLink.style.display = 'block';
            
            // Add a click handler to ensure it works
            heroLink.addEventListener('click', function(e) {
                console.log('Hero link clicked:', this.href);
                // Let the browser handle the normal link behavior
            });
        }
    });
</script>

<style>
    .markdown-content {
        max-width: 800px;
        margin: 2rem auto;
        padding: 0 1rem;
    }
    
    /* Fix for hero image link - ensure the link is clickable */
    .episode-content .video-container a {
        position: relative;
        z-index: 5; /* Higher than the pseudo-elements */
        display: block;
    }
    
    /* Ensure pseudo-elements don't block clicks */
    .episode-content .video-container::before,
    .episode-content .video-container::after {
        pointer-events: none;
    }
</style>
