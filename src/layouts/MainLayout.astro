---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';

interface Props {
    title: string;
    description?: string;
    hideEpisodesLink?: boolean;
}

const { title, description = "AI Tools Lab - Exploring the landscape of AI tools and technologies", hideEpisodesLink = false } = Astro.props;
---
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{title} | AI Tools Lab</title>
    <meta name="description" content={description}>
    
    <!-- Open Graph Meta Tags -->
    <meta property="og:title" content={`${title} | AI Tools Lab`}>
    <meta property="og:description" content={description}>
    <meta property="og:type" content="website">
    <meta property="og:image" content="/images/ai-tools-lab-logo.png">
    
    <!-- Favicon -->
    <link rel="icon" href="/images/ai-tools-lab-logo.png" type="image/png">
    <link rel="shortcut icon" href="/images/ai-tools-lab-logo.png" type="image/png">
    
    <!-- Stylesheets -->
    <link rel="stylesheet" href="/styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Revalia&display=swap" rel="stylesheet">
  
    <style>
        /* Header logo font styling */
        .logo a {
            font-family: 'Revalia', sans-serif;
            font-size: 3rem;
        }
    </style>
    <script
        src="https://www.datadoghq-browser-agent.com/us1/v5/datadog-rum.js"
        type="text/javascript">
    </script>
    <script>
        // Initialize Datadog RUM with type safety
        const ddRum = (window as any).DD_RUM;
        if (ddRum) {
            ddRum.init({
                clientToken: 'pub1ef411c82203fccee1b3d7b58d064f1d',
                applicationId: 'cea3fe47-039f-47fb-91b3-57389419c2c9',
                site: 'datadoghq.com',
                service: 'ai-tools-lab',
                sessionReplaySampleRate: 20,
                defaultPrivacyLevel: 'mask-user-input',
            });
        }
    </script>
</head>
<body>
    <Header hideEpisodesLink={hideEpisodesLink} />
    
    <slot />
    
    <main class="container">
    </main>
    
    <Footer />
</body>
<script>
    // Import the script functionality directly
    document.addEventListener('DOMContentLoaded', function() {
        // Make video containers clickable but don't interfere with actual links
        const videoContainers = document.querySelectorAll('.video-container');
        
        videoContainers.forEach(container => {
            const link = container.querySelector('a');
            
            if (link) {
                // Only add click handler to areas that aren't the link itself
                container.addEventListener('click', function(e) {
                    // Don't interfere if the click is on the actual link or its children
                    if (e.target.closest('a')) {
                        // Let the normal link behavior happen
                        return;
                    }
                    
                    // Only handle clicks on container background
                    if (e.target === container) {
                        const linkHref = link.getAttribute('href');
                        const linkTarget = link.getAttribute('target');
                        
                        if (linkTarget === '_blank') {
                            window.open(linkHref, '_blank', 'noopener,noreferrer');
                        } else {
                            window.location.href = linkHref;
                        }
                    }
                });
            }
        });
    });
</script>
</html>
