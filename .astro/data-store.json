[["Map",1,2,9,10],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.9.0","content-config-digest","477a472e559fbb8a","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"file\",\"client\":{},\"server\":{},\"assets\":\"assets\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[],\"experimentalDefaultStyles\":true},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":{\"type\":\"shiki\",\"excludeLangs\":[\"math\"]},\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"responsiveImages\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false,\"csp\":false},\"legacy\":{\"collections\":false}}","episodes",["Map",11,12,138,139,200,201,314,315,406,407,496,497,575,576,659,660,729,730,807,808,885,886,962,963,1028,1029,1111,1112,1203,1204,1288,1289,1382,1383,1477,1478,1583,1584,1679,1680,1776,1777,1869,1870,1959,1960,2043,2044,2135,2136],"ep30",{"id":11,"data":13,"body":134,"filePath":135,"digest":136,"legacyId":137,"deferredRender":133},{"title":14,"description":15,"heroImg":16,"videoId":17,"episodeNumber":18,"date":19,"author":20,"tags":21,"takeaways":27,"resources":54,"jumpTo":67,"summary":132,"featured":58,"transcriptAvailable":133},"Maximizing AI with Cursor: Building MCP Servers for Seamless Workflow","Whitney Lee shares her journey of building an MCP (Model Context Protocol) server designed to automate engineering journal entries. Learn how she evolved from experimenting with basic Cursor capabilities to developing a robust tool that captures Git commits, AI chat history, and terminal commands to enhance developer documentation and reflection.","../images/thumbnails/ep30.png","z45LjlhyGyE",30,"2025-05-23T00:00:00.000Z","jasonhand24@gmail.com",[22,23,24,25,26],"mcp","cursor","ai-development","developer-tools","documentation",[28,32,36,41,45,50],{"text":29,"tools":30},"Start with **raw AI tools** to understand their capabilities before adding extensions or plugins.",[31],"Cursor",{"text":33,"tools":34},"Create **preference files** and workflows to maintain consistency across AI interactions and reduce repetitive instructions.",[31,35],"Memory MCP",{"text":37,"tools":38},"Use **MCP servers** like Memory, Context 7, and Taskmaster to solve specific workflow problems systematically.",[35,39,40],"Context 7","Taskmaster",{"text":42,"tools":43},"Implement **test-driven development** and anti-hallucination rules when working with AI to ensure code quality.",[31,44],"Claude",{"text":46,"tools":47},"Build **engineering journals** that automatically capture Git commits, AI chats, and terminal commands for better project tracking.",[48,49],"MCP","Git",{"text":51,"tools":52},"Apply **zero-trust principles** to AI development - always verify outputs and pit different LLMs against each other.",[31,44,53],"ChatGPT",[55,59,63],{"name":31,"url":56,"description":57,"featured":58},"https://www.cursor.so/","AI-powered code editor for enhanced development workflow",false,{"name":60,"url":61,"description":62,"featured":58},"Taskmaster MCP","https://mcpmarket.com/server/task-master","Project management and task breakdown tool for AI workflows",{"name":64,"url":65,"description":66,"featured":58},"Context 7 MCP","https://github.com/upstash/context7","Real-time documentation and context retrieval for development",[68,72,76,80,84,88,92,96,100,104,108,112,116,120,124,128],{"title":69,"url":70,"timestamp":71},"Introduction and Welcome","https://youtu.be/z45LjlhyGyE?t=0","00:00:00",{"title":73,"url":74,"timestamp":75},"Weekend Vibe Coding with Cursor","https://youtu.be/z45LjlhyGyE?t=24","00:00:24",{"title":77,"url":78,"timestamp":79},"Spider Demo App Showcase","https://youtu.be/z45LjlhyGyE?t=120","00:02:00",{"title":81,"url":82,"timestamp":83},"Challenges with Raw Cursor","https://youtu.be/z45LjlhyGyE?t=180","00:03:00",{"title":85,"url":86,"timestamp":87},"MCP Server Solutions","https://youtu.be/z45LjlhyGyE?t=360","00:06:00",{"title":89,"url":90,"timestamp":91},"Engineering Journal Vision","https://youtu.be/z45LjlhyGyE?t=480","00:08:00",{"title":93,"url":94,"timestamp":95},"Conversational Prompt Technique","https://youtu.be/z45LjlhyGyE?t=540","00:09:00",{"title":97,"url":98,"timestamp":99},"Test-Driven Development with AI","https://youtu.be/z45LjlhyGyE?t=809","00:13:29",{"title":101,"url":102,"timestamp":103},"Zero Trust AI Principles","https://youtu.be/z45LjlhyGyE?t=880","00:14:40",{"title":105,"url":106,"timestamp":107},"MCP Server Architecture","https://youtu.be/z45LjlhyGyE?t=900","00:15:00",{"title":109,"url":110,"timestamp":111},"Journal Entry Structure","https://youtu.be/z45LjlhyGyE?t=1020","00:17:00",{"title":113,"url":114,"timestamp":115},"Automated Summaries and Reflections","https://youtu.be/z45LjlhyGyE?t=1123","00:18:43",{"title":117,"url":118,"timestamp":119},"Learning Python with AI","https://youtu.be/z45LjlhyGyE?t=1258","00:20:58",{"title":121,"url":122,"timestamp":123},"Manual Reflection Features","https://youtu.be/z45LjlhyGyE?t=1328","00:22:08",{"title":125,"url":126,"timestamp":127},"AI Prompt-Based Functions","https://youtu.be/z45LjlhyGyE?t=1364","00:22:44",{"title":129,"url":130,"timestamp":131},"Future Development Plans","https://youtu.be/z45LjlhyGyE?t=1715","00:28:35","Whitney Lee shares how a weekend of 'vibe coding' with Cursor spiraled into building her own MCP (Model Context Protocol) server—designed to automate the creation of engineering journal entries from Git commits, AI chats, and terminal commands. With a background in Kubernetes and platform engineering—but not recent app development—Whitney walks through the creative and technical decisions behind her playful demo app and the real problem it helped her solve: tracking her technical progress and decisions with context, clarity, and reflection.",true,"In this in-depth conversation, Whitney Lee shares how a weekend of \"vibe coding\" with Cursor spiraled into building her own MCP (Model Context Protocol) server—designed to automate the creation of engineering journal entries from Git commits, AI chats, and terminal commands.\r\n\r\nWith a background in Kubernetes and platform engineering—but not recent app development—Whitney walks through the creative and technical decisions behind her playful demo app and the real problem it helped her solve: tracking her technical progress and decisions with context, clarity, and reflection.\r\n\r\nShe explores:\r\n\r\n- Why she started with raw Cursor and deliberately held off on using MCP tools\r\n- The specific challenges she encountered—like lack of memory, unclear documentation sourcing, and staying on task\r\n- How tools like Taskmaster, Memory, and Context 7 helped address those issues\r\n- Her vision for a journaling MCP server that automatically generates daily, weekly, and monthly summaries—complete with tone, milestones, terminal history, and reflections\r\n- How she designed and validated the architecture using AI-driven dialogue, test-driven development, and zero-trust principles\r\n\r\nThis episode offers a real-world look at how AI tooling can support—not replace—human thinking, and how to shape those tools into something genuinely useful and sustainable.","src/content/episodes/ep30.mdx","7b9bc331d5039937","ep30.mdx","ep31",{"id":138,"data":140,"body":196,"filePath":197,"digest":198,"legacyId":199,"deferredRender":133},{"title":141,"description":142,"heroImg":143,"videoId":144,"episodeNumber":145,"date":146,"author":20,"tags":147,"takeaways":151,"resources":167,"jumpTo":174,"summary":194,"featured":58,"transcriptAvailable":133,"transcriptContent":195},"Building client-side URL-based state apps using Claude 4 and Lovable","Jason Hand and Ryan MacLean chat and demonstrate practical uses of Claude and Lovable in coming up with and building on ideas very quickly .. daily .. almost as a personal challenge.","../images/thumbnails/ep31.png","EPZn3gidiS8",31,"2025-06-04T22:32:17.000Z",[148,149,24,25,150],"claude","lovable","productivity",[152,156,159,162,164],{"text":153,"tools":154},"Using AI like Claude and Lovable can act as a notebook or **second brain** for capturing fleeting ideas.",[44,155],"Lovable",{"text":157,"tools":158},"These tools reduce **cognitive load** by allowing users to store thoughts efficiently without overburdening mental resources.",[44,155],{"text":160,"tools":161},"Free plans available in these apps offer enough functionality to spark creativity through **limitations**.",[44,155],{"text":163},"Rapid development frameworks allow you to transform high-level project concepts into **workable prototypes** quickly.",{"text":165,"tools":166},"Accessibility of such technology **democratizes problem-solving**, making it easier for non-developers to innovate solutions.",[44,155],[168,171],{"name":44,"url":169,"description":170,"featured":58},"https://claude.ai","AI assistant for coding, writing, and problem-solving",{"name":155,"url":172,"description":173,"featured":58},"https://lovable.dev","AI-powered rapid application development platform",[175,178,182,186,190],{"title":176,"url":177,"timestamp":71},"Intro & Morning Routines","https://youtu.be/EPZn3gidiS8?t=000",{"title":179,"url":180,"timestamp":181},"Cognitive Load Management","https://youtu.be/EPZn3gidiS8?t=500","00:08:20",{"title":183,"url":184,"timestamp":185},"Challenges with Traditional Coding","https://youtu.be/EPZn3gidiS8?t=1000","00:16:40",{"title":187,"url":188,"timestamp":189},"Developing Practical Apps","https://youtu.be/EPZn3gidiS8?t=2000","00:33:20",{"title":191,"url":192,"timestamp":193},"Final Thoughts on Leveraging AI","https://youtu.be/EPZn3gidiS8?t=3000","00:50:00","Jason Hand and Ryan MacLean chat and demonstrate practical uses of Claude and Lovable in coming up with and building on ideas very quickly .. daily .. almost as a personal challenge. Jason shares his morning routine of using these tools almost as a 'second brain' or notebook to capture fleeting ideas that come during his morning coffee time outdoors and how turning to tools like Claude or Lovable feels like using a butterfly net to capture ideas, storing them for later exploration, dissection, or problem-solving.","[00:00:00] **Jason Hand:** I have this routine now. Pretty much every morning I wake up outside, drink a cup of coffee or two and read through my emails and different mailing lists and stuff that I'm on.\nAnd occasionally I'll get like an idea. And I'll just immediately switch over to Claude, or, it's usually Claude, but something and. And then just like jam out, like a quick prompt and see if I can get something going as almost like a notebook for me. Like a placeholder. I might not be able to finish it right now in the next cup of coffee.\n[00:00:28] **Ryan MacLean:** Oh yeah. You see you're touching on something that's a big thing for me. Are you using it kinda like Evernote? You've got a bunch of projects in the mix or what have you. \n[00:00:35] **Jason Hand:** I'm just using it as a second brain 'cause I don't trust my own love that you know, same. I. I don't mean that to sound like \n[00:00:42] **Ryan MacLean:** No, I hear you though.\nIf you're working on two or three projects, it's difficult to have the context in your head of the, a lot of \n[00:00:46] **Jason Hand:** ideas just, they come and go. Yeah. And it's just the truth. And I guess that at this point in my life, I've learned like my own little hacks to capture 'em, like butterfly net, it's oh, that's a good one.\nI gotta get it. And I put 'em wherever I can that I know, I know where I'll find them. [00:01:00] And that's what these are, that's what these are turning into, at least when it comes to solving small little problems or doing something that like helps with a hobby. Or, which is like one of some of the stuff I've been working on right.\nOr recently is the summer is here and it's its time to get out and go see your friends and do fun stuff on the weekends and absolutely. Music festivals and just all kinds of fun stuff. And, but unfortunately we all are busy people and we have families and things and it's hard to like schedule time together.\nSo it's a common problem. \n[00:01:32] **Ryan MacLean:** Now there's, before you show us the app I get a quick question, like, how long is this session for you? Because for me to code generally, and I'm talking about maybe pre 2020 brain, it, that's a two to five hour at least process. It takes a long time for me to get into I don't wanna say the zone, but get into the working area where I've got my docs on one screen.\nIt's got probably a command line and an open code editor that'll take me, maybe not two hours, it'll take me at least an hour. To get up to speed to where I was before. And then feel like I'm actually doing some work again. [00:02:00] How long does it take you? Because it feels five minutes for me now if I'm just opening up a, like a Claude session.\n[00:02:05] **Jason Hand:** What I'm actually finding I'm doing unintentionally is I'm using like Claude's free plan. And I'm also been playing around with Lovable, but staying on their free plan. Of course there's limitations for both. Claude has like usage token window yeah. Limits that are they flex, based on like demand.\nAnd you'll run out. Especially like I've started really I told you before we were recording, I, I started really enjoying Astro because we've migrated our site and like I'm learning Astro. So now like a lot of my projects, I want them to be Astro projects. Gotcha. 'cause it just gives me so much flexibility and so many things you can do with it.\nAnd but that's a lot of code. It certainly can be. Yeah. Agreed. I'm running out of I'm basically burning through the free stuff that they give you, whether it's the token limits on Claude, i'm not able to get more than maybe five back and forth conversations. Or prompts and responses.\nWhich isn't all that different from Lovable. You get five and I've been treating it like a challenge. It's not often [00:03:00] it'll get a zero shot. A lot of times the app is functional, it'll do what you said, but it's not what I have in my mind yet.\nBut if I can get there in five, like I, have with Lovable or until I run out of tokens on Claude, and they'll give you more every five hours by the way. But, I don't know. That's kinda my morning challenge. It's like how I've started to like boot up in the morning. \n[00:03:19] **Ryan MacLean:** Is that like half hour of work or an hour of work?\nYeah. Sorry to put a number on it. \n[00:03:23] **Jason Hand:** Yeah, I would say it's probably half hour to 60 minutes or so, and I don't know, some of that's also mixed. I, IGI bounce back and forth between reading stuff and maybe even also like doing a little research on something I just learned about. It's usually no more than 90 minutes of total time.\n[00:03:40] **Ryan MacLean:** That's amazing to me. I'm pulling out the soapbox here just a little bit. 'cause I feel like this to me is like, when I used to play video games, I would sit for, I don't know, it felt like 18 to 20 hours at a time. These days I might have 10 minutes for a video game. And the term for that is called game snacking.\nAnd this feels to me like code snacking or dev snacking. I don't need to pin a term on it, but it does [00:04:00] feel like a different way of coding that feels it. It scratches that same itch but in a much shorter timeframe. And it feels can come back to it a lot easier than I used to be able to.\n[00:04:08] **Jason Hand:** It does. And that itch is oh, I wonder if I can solve that problem that I now have. Yeah. And here's another problem I have, I like to go stand up paddle boarding. And there's a ton of really great bodies of water around for me to go, when I can. But the weather is like the main thing that depends on if it's good conditions.\nYou don't want it to be windy. Depending on if you're planning on being in the water's too cold. There's just stuff that you wanna know about. So I tried to build a little app that uses open , meteorological data that's out there and do that.\nAnd it was just like that was a problem I was trying to solve in that moment. I wanted to go paddle boarding. I wasn't sure where I wanted to go and because I've done this enough times to know that I've got 90 minutes to spare, right? Lemme just see if I can solve this. In a fun way and learn something along the way.\nAnd usually what happens is if it doesn't work, it's just a toss out, I just toss it back. \n[00:04:56] **Ryan MacLean:** Throwaway code, yeah. Whatever. \n[00:04:57] **Jason Hand:** Yep. And I learned, definitely learned something in [00:05:00] that time. And then, but if it turns out to be good or something's, I want to continue on this and I have the time to continue on it, whether it's immediately or later, I can then drop it into Cursor is what I've been doing Right.\nSo that's just turned into my workflow lately. Just get a bunch of ideas going and then ones that actually have some legs, I take 'em to the next level.\nOr lately sharing them a little bit more with some others and just trying to get some feedback. \n[00:05:25] **Ryan MacLean:** Yeah. Yeah. So is your spitball approach primarily Lovable or Claude free? Is that, those are your tools that you start with. \n[00:05:31] **Jason Hand:** Yeah, right now it's Claude's probably my go-to where I reach first to just get that like I said, notepad type of thing, get something going.\nBut Lovable has been like, I would say. Definitely number two, but the thing that's fun about that there's this term that I had to look up because when I started trying to figure out what I wanted to build here, I knew that I didn't want to have a real big architecture. I don't want like a backend like database and yeah. Cloud [00:06:00] storage, I didn't really want that's not how much, how obsessed I am about solving my own problems.\nAnd also, I don't know, lately I'm just so fed up with being tracked by all of the different tracking. I. \n[00:06:12] **Ryan MacLean:** I don't think you're alone. I'm seeing a renewed interest in, in, not using Facebook and not using a lot of the social media apps, but trying to figure out what we can get it done on your own.\n[00:06:21] **Jason Hand:** Yeah. It just really, it bums me out every time I see. So a cool new tool that I, I want to go try and it, you have to sign in with an email address, right? And create profile and stuff. And I was like. You don't always need that. That's not always the functionality that you have to have just to get the job done.\nAnd that's what I was trying to do here with this app is like I was saying it's summertime and there's things to do and people to see and I wanted to create something like, it's a calendar. Oh, this is cool, that thank you. That allows me to choose days that I'm gonna be, am I going to see the bear naked lady?\nI know that man. Yeah. Maybe I'll say I am gonna see that. And the reason why it New Red Rocks is there, is I've got these custom calendars that I Oh, cool. Hold it to display so we can put the Red Rocks [00:07:00] calendars in there. The main ones I'm actually the most interested in is all the bluegrass festivals that happen in Colorado.\nThis will show those, and if I say I'm gonna be at this yes, I'm attending that and that, and then done. And I would go through and just make all my selections right. And actually I'm logged (in air quotes). As you in this, okay, so I just sat here and said I don't want to have this profile thing and user set up, but there is that kind of functionality.\nIt turns out you can do that in the URL. Gotcha. And I think we've known that, or I've known that forever, but I've never really set out to build something that operates that way. \n[00:07:31] **Ryan MacLean:** Yeah. I'm only in there using UTM codes and things like that so what else can you put in that? 'cause I love playing with UTM codes.\nSomebody will send me a link and I'll change the referral or what have you, just to play around and see what they're doing. \n[00:07:41] **Jason Hand:** Yeah, there's, you're basically so what's weird is here I'll actually finish making my selections here. When you. Make all your selections and then you go into the results.\nWe can see all the days where, it's a good, it's a good day for you and I to get together. Both of us are available on June [00:08:00] 5th. And so I can then say, come in here and say let's get together for, dinner or something. And then hit create invite and that's gonna create a Google invite that you can put in your calendar.\nBut the real like way to share this around and get me and you to put on in our own stuff is you have to hit down on the calendar. And I'm gonna move this to where it's displayed everywhere. You just hit share. Okay. And this huge, so if I hit that, this huge pull up the notepad here.\nLink. Oh, wow. Is what gets generated. Okay. So I don't know if you can see that, \n[00:08:33] **Ryan MacLean:** but I can Yeah. \n[00:08:34] **Jason Hand:** Make it a little bigger. So that's the URL, right? With all this encoded. Oh, I see what's \n[00:08:39] **Ryan MacLean:** going. So it's saying true for certain dates. I can parse this a bit. \n[00:08:42] **Jason Hand:** Yeah. encoded. So there's users, there's user Id name, there's Jason, and the dates that I've selected, it's not exactly human readable, but this is like the temporary database that we're basically handing back and forth.\nAnd building on, if like I, I make some changes, I need to then create a new link and pass it [00:09:00] back to you, and that'll be up to date. And then if you make some changes, you'll have to pass it back to me. But we can bookmark these and save 'em, turn 'em into hyperlinks to actually create state almost.\nYou know what I mean? Like I could say my, what I, my selections last week were this URL, but my selections this week are this URL. So you can create like a re like a history, if you wanted. Great. Anyway, it just really got me thinking about all the ways that you could use this type of data storage.\nAnd so this has been the app that I've been working on the most since we last got together. But then I put together this other one, which is related, but I did it on Lovable. You'll see that. I see that. Yeah. \n[00:09:35] **Ryan MacLean:** Yeah. But it looks the same. \n[00:09:37] **Jason Hand:** It I made it look the same. Okay. I told it like, let's use the styling even though it's over unLovable.\nAnd one day I'll probably give it a real domain, but. Yeah. One of the other challenges, yeah, I think for me and my friend groups, and again, probably literally everybody, is when you're going doing fun stuff, sometimes you get together and you all chip in on expenses and you're trying to figure out later like how to split costs, or maybe you have a big dinner date and there's [00:10:00] 10 of you.\nSplitting costs is just always a headache. So I, that was something else I wanted to, solve for Oh, I like that. APIs and IPAs. Yeah. Perfect. And then of course there's, I'm not gonna put my Vimo in, but there, if I did, you could then send me stuff. But there's tools. There's like SplitWise that could handle this.\nThere's Doodle.com which can handle like the calendar stuff, but again, I don't want to go log in and give them all my. Email information. Yeah, I think we were looking \n[00:10:28] **Ryan MacLean:** at Doodle the other day. It's changed hands a few times, so I worry about where that data's being used. Yeah. Is my thing. And then people in the US use, is it Cash App or Venmo that I think are splitting stuff.\nBut then as a Canadian, I don't use either of those. So this is, yeah, it's constantly a concern for me. \n[00:10:41] **Jason Hand:** Exactly. And now I'm gonna put this up. Already in, in GitHub, and so go. Just deploy this somewhere yourself, and you don't have to use those tools. \n[00:10:51] **Ryan MacLean:** Oh, that's \n[00:10:51] **Jason Hand:** cool. So anyway I was just kinda like making up numbers here, but put you in here and put myself in here.\nYou can also change the colors pretty much anything that you wanna change can be stored in the [00:11:00] URL and it's pretty fun. So yeah, I owe you $10.50 and we could say maybe there's one other person, maybe Rick was gonna join us or something. And then, so we're gonna actually split that three ways now.\nSo there's three people for two expenses. Now Rick just owes you 22 and me, Jason, or me a dollar. Gotcha. So if we \n[00:11:22] **Ryan MacLean:** had supper two nights in a row and I paid one night, you paid the other night kind of thing, this would definitely solve that. Yeah, exactly. And then if Rick came along for both and didn't pay anything sort of thing.\n[00:11:31] **Jason Hand:** Yeah. If as long, assuming you like, just waited till the end to tally it all up. You just put in your stuff. And again, you can share this around, like I put in my amount and then I'll like text it to you and you put in your amount. Anyway, I just got, I told you the other day in chat I've become obsessed with trying to find other little apps.\nI can make that, that do this, but. DASH is upon us in that, but \n[00:11:51] **Ryan MacLean:** yeah, our internal event is taking up a lot of time. I do wonder though, have you tried making these apps in multiple places or do you typically just use because you're using two different types here. I guess I [00:12:00] wondering about the rubric or how you, what that thought process is.\nOr is it just you reach for the one that's closer and try it out and Yeah. And see how far you can go? \n[00:12:07] **Jason Hand:** I guess I was saying I usually start with. A Claude, right? But one thing that I did realize in this most recent session with Lovable, with this the Split Something app is, lemme get in here to, oh, it's down here.\nPlease forget that they're right down here. \n[00:12:23] **Ryan MacLean:** A paddle weather whisperer. I like these names. I can figure out what it's trying to do. Yeah, we can come back to \n[00:12:27] **Jason Hand:** that one. \n[00:12:27] **Ryan MacLean:** The self weather tracker. \n[00:12:30] **Jason Hand:** So the deal with this is, I told you that I started in Lovable, but you only get five wishes, so you can only do thing five times and then, but one of the neat things, I guess it's neat for me, at least in this situation, is that you can push it up into GitHub okay?\nAnd just create a new repo. From right here. So I like that idea. 'cause if it's a, if I like where this is headed I do want to get it into GitHub pretty soon because from there I'm going to probably play with it in multiple places. So I hadn't really taken advantage of [00:13:00] that intentionally until now.\nAnd as you can see over here on the left, once I put it up into GitHub, I then pulled it up into Cursor, started doing things over there and it. Automatically all I was doing was just making some read changes to the README initially, but it automatically noticed the changes in the repo. \n[00:13:18] **Ryan MacLean:** That's cool.\n[00:13:19] **Jason Hand:** And I could then review the changes over here and see it. And then another thing observation here about this whole process is just because, I guess now I have a better understanding of how Lovable works. It's not going to just redeploy the app. Now that it's in GitHub and you've pushed code back in, there isn't some sort of automation, continuous, like CI/CD build.\nThat just happens, right? Then you still gotta come back into Lovable and then there'll be a, an option up there to, I think it's, I don't think it's Publish and it's like redeploy or re- something \n[00:13:51] **Ryan MacLean:** Refresh or something like that. Yeah. Okay. \n[00:13:52] **Jason Hand:** Exactly. 'cause no, it sees that the code has changed and at that point now it's deployed obviously onto Lovable infrastructure and the app and everything [00:14:00] will work through the URL, that's been the process for these few is I'll start in the cheap sections or, in the, in the free stuff if I like where it's headed, let's get it into GitHub. And then from there I usually bring it down into Cursor and if things are really not going the direction I want them to, I get out Claude Code and because it Gotcha.\nIt just seems to like. Read my mind and do exactly what I'm, I need it to, but I try not to always default to that. Like I, I like. Understanding all of them. \n[00:14:30] **Ryan MacLean:** Yeah. This feels like a rapid application development framework of some sort. Even though it, on your end, it might feel like you're cooking spaghetti and throwing it at the wall.\nIt's the fact that you can try different ideas this quickly and iterate that fast, even if you have to go to GitHub and then refresh a page. To me is a benefit because as someone who doesn't do front end, this would be me asking a team to do something, waiting a week or two, and then seeing what they come back with only to realize my actual architecture was wrong or the premise that I had come up with wrong or the [00:15:00] framework I was using or wrong that the idea was wrong.\nThere's something fundamentally wrong with my idea. Yeah. Not with their code, but like with the instructions I've given them \n[00:15:08] **Jason Hand:** and some of them like have been. They just they exposed to me how complex this might be. And I have to decide, do I want to go that right way? This sounds fun, but like I need to stay in this quick ideas, like just what are the little things that have been bugging me that I can just solve, and let's move on.\nI'll save the complex ones for later when things have, evolved. And also I've run out of small problems. Okay. But at least I got 'em documented and I can come back to 'em. \n[00:15:41] **Ryan MacLean:** The other thing that sticks out to me is in a pre gen AI world, and let's say it's 2019 or maybe 2018. For me at least I might write the ideas down, but I definitely would not have done anything.\nSo I'd have a list of 20 ideas, maybe 30 at the end of a couple weeks of working [00:16:00] on something. And chances are I may have spitballed on one of them, maybe two. If that though, to be fair, \n[00:16:06] **Jason Hand:** yeah. I have to yeah. Acknowledge the privilege that I have to sit Yeah, exactly. Sit outside on my front porch and just drink coffee and, ideate and read and learn and build and then start my day kinda off like that way. And then I, and then I take. \n[00:16:20] **Ryan MacLean:** Yeah. The promise of remote work was on the beach with your, Mai Tai, what have you. Oh, that, stuff like I, listen I worked remote and that still wasn't a reality for me.\nThere was still stuff that you I needed a bit more access. This does feel like a. I don't wanna say lone wolf, but something that you can do solo pretty easily without too much interaction, and then go back to a team and say, Hey I played around with this on the weekend. It looks like there's a new feature in Astro version five called, I don't know, component collections or, so something like that.\nI forget what they're called, but some collections that we can use as a result. Let's try that. Here's an example. Let's not use this, but here's an example that I got with Lovable or Bolt or Claude or what have you. That to me is [00:17:00] incredibly valuable because again, as someone who doesn't do a lot of front end it, it's amazing for me to be able to try that stuff out.\nSo I, I think what I was looking for is some sort of other methodologies so you're saying five tries is generally when you'll stop you'll try a different tool. It's not time-based. It's more about what can you get done for free with a couple iterations or up to five iterations.\nThen you'll pick up either Claude Code or if it's really serious Cursor is what it sounds like, and then you'll work from there and get. Like a human in the loop and another person to give you your feedback and then settle the features. Does that encompass? Yeah, \n[00:17:29] **Jason Hand:** and you know what?\nNow that you say that out loud, \n[00:17:34] **Ryan MacLean:** sorry to rationalize it, but this sounds awesome. I just need friends, I think is the only thing. So what I, \n[00:17:38] **Jason Hand:** what but what it is, basically what I'm doing is like exactly what I do with like songwriting. Oh yeah. Is gotta, when the. Look, we're not always in the right head space for things.\nAnd so when you are, you gotta jump on it. And that's that's what I'm, that's what those 90 minutes or whatever, it's, yeah, it changes, but that's what that is for me. It's collection, it's creation and collection time. And I've figured out I can use that [00:18:00] as like just getting ideas to bubble up.\nAnd then use the time that I have to see if I can make some sort of progress. And it's just a phased approach, like you have, I have. A hundred ideas. I get 'em down to five. Yeah. From there I get 'em down to two and then we go, do, we do the next thing. And that the fact that we can all do that now.\nYeah. The. There's gonna be a lot of people solving their problems, which I think is awesome. Which \n[00:18:24] **Ryan MacLean:** brings me to my next question. This is ma may I've got a solution, but I dunno what you're doing, but my brain feels like it's a squirrel and I'll look the other way and something grabs my attention all the time, especially now that we're, ramping up to an internal conference.\nI've got a little bit less time than usual. I'm babysitting some dogs, my own dogs, let's be honest. But if they got any health problems or something like that, I might be dealing with them for a second, then come back to the computer and traditionally like that. And one two minute change of not looking at something would mean when I came back it would take me about 15 minutes to ramp up to what I was like, maybe not that bad, maybe about five minutes.\nThese days though, it feels like I can just type continue and [00:19:00] continue on. That being said, there's sometimes when I change tools that I really miss not having that context from whatever chat session I had. Sometimes I'll copy that out and do I might say the prompt or the system prompt or what have you.\nA-P-R-D-I think we talked about before. I've been using todos a lot these days, but how are you keeping that context between maybe different days or if you're handing off to a different person or a different tool? What does that look like for you? Because todo is my answer and I, I don't think it's the best, but that's all I've got right now.\n[00:19:27] **Jason Hand:** Yeah. I think for these, I don't believe I'm using. To do. Let me, \n[00:19:34] **Ryan MacLean:** And for those listening, I'm literally just talking about like a todo markdown file with check boxes in it. This is as sophisticated as I've gotten at this point in time. \n[00:19:42] **Jason Hand:** I've got a Claude file.\nOkay. Okay. Like a CLAUDE.md, because it had, I did bring it into Claude Code at some point. \n[00:19:49] **Ryan MacLean:** Okay. And does Claude Code do that by default? Having only played with it once? I didn't notice.\n[00:19:53] **Jason Hand:** It's a good question. I don't remember if I act, if I prompted it to make this. Okay. I think it created, its on its own 'cause there's not a [00:20:00] lot here.\nInteresting. I wanna say it probably, yeah I don't know if I remember exactly when that was created, but that's all I've gotten. Really in here, I do have a roadmap file that I like started that was gonna be like my to-do. \n[00:20:14] **Ryan MacLean:** That's a good one. Yeah. When you're thinking down the road for other features or what have you.\nOkay. \n[00:20:18] **Jason Hand:** Yeah. And actually I did that, like the first version of it is here.\nI do have, like I said, there, there's a CLAUDE.md file in here, but it's really small. I think it was created automatically. I don't remember asking it to do that. But my roadmap file is like my similar to, to do but really meant to be like feature requests. So the first version I had of this, I sent out to some folks.\nThey came back and told me, it'd be great if I could send it out to multiple groups of people and keep that somehow still straight. Like some are my like music friends and some are family and like, how do I like visually see that? At first I was like, I dunno if I can do that without having some sort of backend like state management.\nAnd then the same with also getting granular down to the [00:21:00] time, like what specific time, not just what day. Yeah. But the more I was like thinking about it, I was like, I think it, it's just another. It's just another number, just another like variable to be stored in the URL. I don't know why we can't do that.\nSo I can actually check this off. I did that. And that's pretty much all I've done so far. I haven't gotten probably more than four hours total time into this. \n[00:21:23] **Ryan MacLean:** That's pretty good too. If you think about the actual amount of work that you've done versus the output that's. Yeah, that's actually pretty incredible.\nI \n[00:21:29] **Jason Hand:** was really impressed with the you know what, I might actually be able to pull up the first one. It gave me the zero shot. Let's see. You can see all the stuff. Colorado su standup paddleboard location app. Oh I made a little wordle game. A bluegrass themed Wordle. You like \n[00:21:52] **Ryan MacLean:** Wordle? That's amazing.\nI do, in fact, like Wordle I'm enamored in with the fact that you can resume your state by just opening the same [00:22:00] URL again. Yeah. I think is what I really likem. \n[00:22:02] **Jason Hand:** I've got a really nice what do you call it, telescope, like deep space telescope. Not deep space, but like a good telescope. Yeah. Yeah. And I wanted to see if I could.\nFigure, find something, build something that helped me, choose which day and time I should go. Go look at stuff. Didn't make very far on that one.\n[00:22:18] **Ryan MacLean:** I'm loving this list of ideas, like each one. So each session is a new idea. I guess one of my problems with Claude is that my brain is just all over the place, so I'll end up putting three or four ideas into the same thing and then it gets confused halfway through it.\nWe'll change my weather app into a translation app just 'cause of the way that I started talking to it. So I've gotta be careful to split that stuff out. But it looks like you've you've already learned that. \n[00:22:38] **Jason Hand:** Yeah. It is a good way to compartmentalize things. And you know me to go back, I completely forgot if the word wordle thing, and yeah, so that's another one. And it's actually, it works. So I gotta go back and kinda tinker with that. Very cool. But this was the first conversation I had. So let's see, make this a little bigger. Wanna build a web app to help me find dates where multiple people are available on the same day, [00:23:00] like doodle.com, but only the date, not the time is important.\nWant users to see a counter view, select all the dates and. States blocked. The app will then show all the best options for dates where the most people are available. \n[00:23:12] **Ryan MacLean:** I gotta say, this is the worst project definition I've ever seen. This is a Jira ticket. You know what I mean? This is one of those ones where you're like, ah, it's that project manager.\nLike really? \n[00:23:23] **Jason Hand:** Sometimes an idea is just, but that is \n[00:23:24] **Ryan MacLean:** fantastic. The fact that you can run with that and just a, like a natural human language way of speaking to a an engineer is phenomenal, right? You don't like, I need it done by Wednesday. It's a large t-shirt size. I, I realize you're also busy on these other things, but this is a priority two.\nSo please prioritize it. Okay. Appropriately. This is fantastic. It removes all that headache of overhead of dealing with an engineering team. At the same time, you can do this while doing other things like drinking your coffee. This phenomenal to me. \n[00:23:52] **Jason Hand:** It just \n[00:23:53] **Ryan MacLean:** helps me \n[00:23:53] **Jason Hand:** get some ideas, \n[00:23:54] **Ryan MacLean:** Even this first iteration that you're showing me here, I guess it says V two, but this looks pretty good.\n[00:23:59] **Jason Hand:** It [00:24:00] does, yeah. Does what it. Is supposed to do that. This \n[00:24:03] **Ryan MacLean:** is a really good rapid application development tool, which a couple \n[00:24:06] **Jason Hand:** things here, and then we look at the results and yeah, that's all three people are available. That's phenomenal. So that's what it got like on shot one. \n[00:24:14] **Ryan MacLean:** Yeah.\nOr zero. This is great. The way that it can create React apps that are just in a sidebar and Claude I, I think is fantastic. Be it in, in, in web or desktop or even the iOS app. I've noticed is, it's actually pretty neat to me just to visualize the idea that I hadn't realized, oh, no, that's actually.\nYou know what, why would you do that? Like you, you don't need the times of the day. Actually what I need is the date. And then realizing that's your feature set and going back to the well to get more, that, that's fantastic. I think the key is that you can get that result out there quickly and then iterate the problem with me.\nI guess I. Past me prior to 2022 would be that I just wouldn't get started. 'cause it was so hard to get started. Yeah. And now it's no, I can get started on five or six different things and then pick the best out of them instead of just sitting there worried about how much time this [00:25:00] gonna take and not doing anything or over planning.\nThat is really cool. I. \n[00:25:03] **Jason Hand:** I do not like to waste time. And finally, I feel like I'm not wasting time by just exploring something. There used to be so many different things I'd wanna do with raspberry pies and Oh, don't get me started. I \n[00:25:14] **Ryan MacLean:** got 12. Yeah. Don't get started. Absolutely. And I just, I \n[00:25:16] **Jason Hand:** know that I'll get I don't know, days in and realize this isn't working and.\nAnd I have this like a dread, this like feeling that washes over me. I'm like, that was a waste of time. And I just out like that's time is like the one thing I do not waste.\n[00:25:31] **Ryan MacLean:** That is really cool. Listen I learned a lot from your process. I've been using. Bolt a lot and Claude Desktop and ChatGPT to a lesser extent.\nBut those are the three sort of tools that I use. I will say every time I've used Lovable I get Lovable results. And I hate to say that 'cause it's funny, but it's absolutely true is that I do enjoy my time in that app and it feels if we're still voting with our wallet it's almost time to stop the Bolt subscription and maybe move over to the Lovable.\nIt is where I'm at, but I have paid for Claude and it [00:26:00] wasn't cheap. I do feel like I'm getting my money out of it, and that's. That's not just like Claude sonnet for coding as an API key, but also the actual chat app. I do like it. I do pay for ChatGPT, but I've noticed myself using it less and less primarily because I'm using Claude for coding and I get more value out of coding than I do talking to ChatGPT about random things.\nIt's not my search engine. It doesn't do that yet for me. I don't know if it does for you.\n[00:26:25] **Jason Hand:** Occasionally I'll start there on some things, but yeah, it's not, that's not why I'm the same with you. Like most of the stuff I've been wanting to do lately is solve my own problems. And I don't want to just, yeah.\nI could go use Doodle and I love Doodle. I've used it for years. That's what we've used. It's worked fine. I just wanted to make something else. It's a solvable problem that I can take care of myself now. Yeah. \n[00:26:44] **Ryan MacLean:** That solve your own problems, that citizen developer thing to me is very exciting.\nThat means like the amount of people who can code seems to have increased. I'm bringing down a bar. I think here I'm lowering the bar for more people to start coding because I know it's difficult to say what the total addressable market is for developers out [00:27:00] there, but I do feel like this is.\nIt feels like it's exponentially growing as a result of making these tools more accessible. \n[00:27:06] **Jason Hand:** Yep. More equitable. Just more \n[00:27:08] **Ryan MacLean:** totally agree. \n[00:27:09] **Jason Hand:** Yeah. That's probably about all the time we have to talk today, so that was awesome. \n[00:27:15] **Ryan MacLean:** Yeah. Thank you very much for showing us what you've been up to. \n[00:27:17] **Jason Hand:** Yeah. It's been fun.\nKind of, finding time. Usually, like I said in the morning to, to work on it. 'cause as soon as I close the iPad and go, go up to my office, it's been DASH. \n[00:27:26] **Ryan MacLean:** Yeah, that's what happens this time of year. Yeah, for sure.\n[00:27:28] **Jason Hand:** But I'm DASH is closing is, we're almost here, so a week away.\nOnce, once we get through that, then we can we have a lot of plans we wanna make with the, with this program and what we're doing here, so \n[00:27:37] **Ryan MacLean:** Absolutely. \n[00:27:38] **Jason Hand:** It'd be nice to be able to focus on that. And anyway, thanks Ryan and no thank you. That was awesome. We'll talk to you on the next one.\nAll right. Bye \n[00:27:46] **Ryan MacLean:** folks.","Jason Hand and Ryan MacLean chat and demonstrate practical uses of Claude and Lovable in coming up with and building on ideas very quickly .. daily .. almost as a personal challenge. Jason shares his morning routine of using these tools almost as a \"second brain\" or notebook to capture fleeting ideas that come during his morning coffee time outdoors and how turning to tools like Claude or Lovable feels like using a butterfly net to capture ideas, storing them for later exploration, dissection, or problem-solving. \r\n\r\nThey discuss their tendencies to juggle multiple projects simultaneously and the challenges that accompany keeping track of all those ideas without losing context. They highlight how AI allows them to quickly kickstart projects they might otherwise only conceptualize in traditional notepads or task managers. \r\n\r\nJason details his personal approach of using free plans on Claude.ai and Lovable.dev, strategically working within usage limits as a daily challenge. This habit not only sparks creativity and idea capturing mechanism, but also aids him in solving real-life problems through simple applications he has built like [**\"See Ya There\"**](https://seeyathere.netlify.app/) and [**\"Split Sumthin\"**](https://color-coded-budget-buddy.lovable.app/) to help organize friend gatherings at bluegrass festivals or to split expenses with others, but without the hassle of logging into or registering for a service with his Gmail account. These problems shouldn't require a user to give up their personal information to solve a problem. \r\n\r\nJason also points out how such accessible tools reduce initial complexity barriers, allowing him to rapidly prototype solutions that he can later refine or abandon based on effectiveness—thus paralleling themes familiar in songwriting processes where ideas are synthesized before being fleshed out.","src/content/episodes/ep31.mdx","a12aeee9a1bcfd7e","ep31.mdx","ep29",{"id":200,"data":202,"body":310,"filePath":311,"digest":312,"legacyId":313,"deferredRender":133},{"title":203,"description":204,"heroImg":205,"videoId":206,"episodeNumber":207,"date":208,"author":20,"tags":209,"takeaways":213,"resources":233,"jumpTo":245,"summary":309,"featured":58,"transcriptAvailable":133},"Building a Lissajous Animation Using Gemini 2.5 Pro","In this episode, Jason Hand and Ryan MacLean explore the capabilities of Gemini 2.5 Pro, demonstrating its impressive features through hands-on examples including creating interactive mathematical visualizations and discussing its enhanced context handling capabilities.","../images/thumbnails/ep29.png","UPC03_FD0-I",29,"2025-05-12T00:00:00.000Z",[210,24,211,212],"gemini","coding","visualization",[214,218,221,224,227,230],{"text":215,"tools":216},"Gemini 2.5 Pro features a **million token context window**, enabling better handling of large projects without context loss.",[217],"Gemini 2.5 Pro",{"text":219,"tools":220},"The model demonstrates improved **context caching**, maintaining coherence across extended interactions and development sessions.",[217],{"text":222,"tools":223},"Real-time **code generation capabilities** are showcased through interactive mathematical visualizations created in under 30 seconds.",[217],{"text":225,"tools":226},"The model excels at understanding and implementing **complex mathematical concepts** like Lissajous figures with proper physics.",[217],{"text":228,"tools":229},"Integration potential with **educational tools** is highlighted through interactive demos that blend math, science, and programming.",[217],{"text":231,"tools":232},"**Free research preview** access makes advanced AI capabilities accessible for experimentation and learning.",[217],[234,237,241],{"name":217,"url":235,"description":236,"featured":58},"https://ai.google.dev/gemini","Google's latest AI model with enhanced capabilities and million token context window",{"name":238,"url":239,"description":240,"featured":58},"Lissajous Figures","https://en.wikipedia.org/wiki/Lissajous_curve","Mathematical background on the visualization patterns demonstrated in the episode",{"name":242,"url":243,"description":244,"featured":58},"Google AI Studio","https://aistudio.google.com/","Web interface for accessing and experimenting with Gemini models",[246,249,253,257,261,265,269,273,277,281,285,289,293,297,301,305],{"title":247,"url":248,"timestamp":71},"Introduction to AI Discussion","https://youtu.be/UPC03_FD0-I?t=0",{"title":250,"url":251,"timestamp":252},"Gemini 2.5 Pro Overview","https://youtu.be/UPC03_FD0-I?t=30","00:00:30",{"title":254,"url":255,"timestamp":256},"Context Window and Caching Features","https://youtu.be/UPC03_FD0-I?t=47","00:00:47",{"title":258,"url":259,"timestamp":260},"Large Project Handling Experience","https://youtu.be/UPC03_FD0-I?t=95","00:01:35",{"title":262,"url":263,"timestamp":264},"Lissajous Figure Introduction","https://youtu.be/UPC03_FD0-I?t=118","00:01:58",{"title":266,"url":267,"timestamp":268},"Mathematical Visualization Demo","https://youtu.be/UPC03_FD0-I?t=129","00:02:09",{"title":270,"url":271,"timestamp":272},"Oscilloscope Connection","https://youtu.be/UPC03_FD0-I?t=189","00:03:09",{"title":274,"url":275,"timestamp":276},"Code Generation Prompt","https://youtu.be/UPC03_FD0-I?t=211","00:03:31",{"title":278,"url":279,"timestamp":280},"Model Thinking Process","https://youtu.be/UPC03_FD0-I?t=248","00:04:08",{"title":282,"url":283,"timestamp":284},"Generated Code Review","https://youtu.be/UPC03_FD0-I?t=300","00:05:00",{"title":286,"url":287,"timestamp":288},"Interactive Demo Showcase","https://youtu.be/UPC03_FD0-I?t=333","00:05:33",{"title":290,"url":291,"timestamp":292},"Speed Test - Second Generation","https://youtu.be/UPC03_FD0-I?t=387","00:06:27",{"title":294,"url":295,"timestamp":296},"29.6 Second Code Generation","https://youtu.be/UPC03_FD0-I?t=433","00:07:13",{"title":298,"url":299,"timestamp":300},"Version Comparison","https://youtu.be/UPC03_FD0-I?t=453","00:07:33",{"title":302,"url":303,"timestamp":304},"Export and Integration Options","https://youtu.be/UPC03_FD0-I?t=541","00:09:01",{"title":306,"url":307,"timestamp":308},"Educational Applications Discussion","https://youtu.be/UPC03_FD0-I?t=629","00:10:29","Jason Hand and Ryan MacLean delve into the capabilities of Gemini 2.5 Pro, a state-of-the-art AI model released by Google. The discussion begins with an overview of their personal experiences experimenting with the model, highlighting its impressive features such as a million token context window and effective context caching which significantly aids in handling large projects like the AI Tools Lab site. The conversation takes a hands-on turn as Jason demonstrates creating an animated Lissajous Figure using Gemini 2.5 Pro by generating HTML, JavaScript, and CSS code that enables user-interaction through adjustable variables.","In this episode, Jason Hand and Ryan MacLean delve into the capabilities of Gemini 2.5 Pro, a state-of-the-art AI model released by Google. The discussion begins with an overview of their personal experiences experimenting with the model, highlighting its impressive features such as a million token context window and effective context caching which significantly aids in handling large projects like the AI Tools Lab site. Ryan shares his prior engagement with the model's coding functionalities, appreciating its capacity to manage broader scopes without issues unlike previous models. The conversation takes a hands-on turn as Jason demonstrates creating an animated Lissajous Figure using Gemini 2.5 Pro by generating HTML, JavaScript, and CSS code that enables user-interaction through adjustable variables. This practical application not only showcases the model's computational speed—producing sophisticated outputs in seconds—but also illustrates its potential as an educational tool blending math, science, and programming. As they wrap up, both express enthusiasm about future explorations into similar mathematical visualizations using Gemini 2.5 Pro.","src/content/episodes/ep29.mdx","b0eb82e1dd92d361","ep29.mdx","ep28",{"id":314,"data":316,"body":402,"filePath":403,"digest":404,"legacyId":405,"deferredRender":133},{"title":317,"description":318,"heroImg":319,"videoId":320,"episodeNumber":321,"date":322,"author":20,"tags":323,"takeaways":328,"resources":347,"jumpTo":362,"summary":401,"featured":58,"transcriptAvailable":133},"Exploring eBPF with AI Tools: Insights and Applications","In this session, Jason Hand and Scott Mabe delve into the intriguing world of eBPF (Extended Berkeley Packet Filter) and its integration with AI tools for learning and application development. The discussion begins with Scott explaining his approach to learning new technologies through experimentation, using eBPF as a case in point.","../images/thumbnails/ep28.png","BuPf-qAzTJI",28,"2025-05-08T00:00:00.000Z",[324,325,326,327],"ebpf","chatgpt","github-copilot","system-monitoring",[329,333,336,340,344],{"text":330,"tools":331},"eBPF allows deep interaction with OS kernels, providing significant control over hardware resources.",[332],"eBPF",{"text":334,"tools":335},"Generative AI tools like ChatGPT can aid non-developers in scripting tasks rapidly.",[53],{"text":337,"tools":338},"Datadog utilizes eBPF for enhancing system observability in various products.",[332,339],"Datadog",{"text":341,"tools":342},"AI tooling expedites coding by providing a basis upon which developers can build further.",[53,343],"GitHub Copilot",{"text":345,"tools":346},"Learning through hands-on experimentation fosters deeper understanding than theoretical study alone.",[332,53],[348,352,356,359],{"name":349,"url":350,"description":351,"featured":58},"eBPF Official Documentation","https://ebpf.io/","Official documentation and resources for eBPF technology",{"name":353,"url":354,"description":355,"featured":58},"eBPF Overview - Datadog Knowledge Center","https://www.datadoghq.com/knowledge-center/ebpf/","Comprehensive guide to eBPF and its applications in observability",{"name":53,"url":357,"description":358,"featured":58},"https://chat.openai.com/chat","AI assistant used for generating eBPF monitoring scripts",{"name":343,"url":360,"description":361,"featured":58},"https://github.com/features/copilot","AI-powered code completion tool used for debugging and code assistance",[363,366,370,373,377,381,385,389,393,397],{"title":364,"url":365,"timestamp":71},"Introduction","https://youtu.be/BuPf-qAzTJI?t=0",{"title":367,"url":368,"timestamp":369},"Learning about eBPF","https://youtu.be/BuPf-qAzTJI?t=41","00:00:41",{"title":371,"url":372,"timestamp":79},"Overview of Operating System Kernel Interaction","https://youtu.be/BuPf-qAzTJI?t=120",{"title":374,"url":375,"timestamp":376},"Use Cases of eBPF at Datadog","https://youtu.be/BuPf-qAzTJI?t=225","00:03:45",{"title":378,"url":379,"timestamp":380},"Generative AI in Coding Demonstration","https://youtu.be/BuPf-qAzTJI?t=298","00:04:58",{"title":382,"url":383,"timestamp":384},"Initial Coding Challenges and Solutions","https://youtu.be/BuPf-qAzTJI?t=350","00:05:50",{"title":386,"url":387,"timestamp":388},"Exploring Various Tools Related to eBPF","https://youtu.be/BuPf-qAzTJI?t=426","00:07:06",{"title":390,"url":391,"timestamp":392},"Exploration of Networking Capabilities via eBPF Programs","https://youtu.be/BuPf-qAzTJI?t=549","00:09:09",{"title":394,"url":395,"timestamp":396},"Discussion on Presentation Focused on Promoting eBPF","https://youtu.be/BuPf-qAzTJI?t=611","00:10:11",{"title":398,"url":399,"timestamp":400},"Encouragements About Learning With AI Tools","https://youtu.be/BuPf-qAzTJI?t=670","00:11:10","In this session, Jason Hand and Scott Mabe delve into the intriguing world of eBPF (Extended Berkeley Packet Filter) and its integration with AI tools for learning and application development. The discussion begins with Scott explaining his approach to learning new technologies through experimentation, using eBPF as a case in point. They explore how eBPF interacts intimately with the operating system kernel, allowing users significant control over hardware for tasks such as memory access and network management. The conversation touches on Datadog's use of eBPF for enhancing observability through Universal Service Monitoring, Cloud Network Monitoring, and security tools. Scott shares an anecdote about encouraging cybersecurity students to learn about eBPF by looking it up on their phones during events. The dialogue transitions into a demonstration where Scott uses generative AI tools like ChatGPT to write a program monitoring changes to crucial Linux files like the shadow file, which is critical for user privilege configurations. Despite initial coding challenges resolved via GitHub Copilot, this process underscores the value of these AI tools in developing functional scripts swiftly without extensive manual research or coding expertise. Both participants acknowledge the iterative nature of using large language models across multiple platforms to achieve workable solutions while emphasizing that although not perfect initially, these technologies significantly expedite development processes by offering foundational code quickly.","In this session, Jason Hand and Scott Mabe delve into the intriguing world of eBPF (Extended Berkeley Packet Filter) and its integration with AI tools for learning and application development. The discussion begins with Scott explaining his approach to learning new technologies through experimentation, using eBPF as a case in point.\r\n\r\nThey explore how eBPF interacts intimately with the operating system kernel, allowing users significant control over hardware for tasks such as memory access and network management. The conversation touches on Datadog's use of eBPF for enhancing observability through Universal Service Monitoring, Cloud Network Monitoring, and security tools. Scott shares an anecdote about encouraging cybersecurity students to learn about eBPF by looking it up on their phones during events.\r\n\r\nThe dialogue transitions into a demonstration where Scott uses generative AI tools like ChatGPT to write a program monitoring changes to crucial Linux files like the shadow file, which is critical for user privilege configurations. Despite initial coding challenges resolved via GitHub Copilot, this process underscores the value of these AI tools in developing functional scripts swiftly without extensive manual research or coding expertise. Both participants acknowledge the iterative nature of using large language models across multiple platforms to achieve workable solutions while emphasizing that although not perfect initially, these technologies significantly expedite development processes by offering foundational code quickly.","src/content/episodes/ep28.mdx","09278fcd1214bceb","ep28.mdx","ep01",{"id":406,"data":408,"body":492,"filePath":493,"digest":494,"legacyId":495,"deferredRender":133},{"title":409,"description":410,"heroImg":411,"videoId":412,"episodeNumber":413,"date":414,"author":20,"tags":415,"takeaways":418,"resources":440,"jumpTo":456,"summary":492,"featured":58,"transcriptAvailable":133},"Building Quick Web Interfaces for Machine Learning Models with Gradio","Exploring how to build simple but effective web interfaces for machine learning models using Gradio, allowing non-technical users to interact with ML systems.","../images/thumbnails/ep01.png","hESEOJRZ-wc",1,"2025-04-26T00:00:00.000Z",[416,417],"web-dev","ml-models",[419,424,427,431,434,437],{"text":420,"tools":421},"Gradio is a very easy way to get a Huggingface Space locally (via `load`)",[422,423],"Gradio","Hugging Face",{"text":425,"tools":426},"It provides a simple way to build frontends for ML applications",[422],{"text":428,"tools":429},"When installing, make sure to create a virtual environment first",[430,422],"Python",{"text":432,"tools":433},"Ensure to install Gradio in that environment after activation",[422,430],{"text":435,"tools":436},"Do not try to run your project in the `Gradio` repo by mistake",[422],{"text":438,"tools":439},"Gradio is particularly useful for quickly creating interfaces to demonstrate ML models",[422],[441,445,449,452],{"name":442,"url":443,"description":444,"featured":58},"Gradio Quickstart","https://www.gradio.app/guides/quickstart","Official quickstart guide for getting started with Gradio",{"name":446,"url":447,"description":448,"featured":58},"Gradio Install","https://github.com/gradio-app/gradio","Installation instructions and repository for Gradio",{"name":450,"url":447,"description":451,"featured":58},"Gradio Repository","Main GitHub repository for the Gradio project",{"name":453,"url":454,"description":455,"featured":58},"Gradio `load`","https://www.gradio.app/docs/gradio/load","Documentation for loading Hugging Face spaces with Gradio",[457,460,464,468,472,476,480,484,488],{"title":458,"url":459,"timestamp":71},"Introduction to AI Lab Experiments project","https://youtu.be/hESEOJRZ-wc?t=0",{"title":461,"url":462,"timestamp":463},"Jason sharing his process for tracking AI tools","https://youtu.be/hESEOJRZ-wc?t=66","00:01:06",{"title":465,"url":466,"timestamp":467},"Ryan explains his work with image generation models","https://youtu.be/hESEOJRZ-wc?t=149","00:02:29",{"title":469,"url":470,"timestamp":471},"Setting up a virtual environment and installing Gradio","https://youtu.be/hESEOJRZ-wc?t=303","00:05:03",{"title":473,"url":474,"timestamp":475},"Jason's thoughts on creating interfaces","https://youtu.be/hESEOJRZ-wc?t=462","00:07:42",{"title":477,"url":478,"timestamp":479},"Discussion about HuggingFace spaces","https://youtu.be/hESEOJRZ-wc?t=509","00:08:29",{"title":481,"url":482,"timestamp":483},"Testing image generation through Gradio","https://youtu.be/hESEOJRZ-wc?t=676","00:11:16",{"title":485,"url":486,"timestamp":487},"Why you would use Gradio","https://youtu.be/hESEOJRZ-wc?t=961","00:16:01",{"title":489,"url":490,"timestamp":491},"Wrapping up and plans for next tool exploration","https://youtu.be/hESEOJRZ-wc?t=1087","00:18:07","In this episode, Jason Hand and Ryan MacLean introduce their AI Lab Experiments project, explaining their goal to stay updated on AI tools and share their findings with the community. Ryan demonstrates Gradio, a Python library for quickly building web interfaces for machine learning models. He shows how to install Gradio in a virtual environment, import it, and create a simple demo by loading a Hugging Face space locally. They successfully create a question-answering interface and also run an image generation model through Gradio. Ryan explains that Gradio is particularly useful for backend developers who need to quickly create front-end interfaces without extensive JavaScript knowledge, making it easy to demonstrate ML features to others.","src/content/episodes/ep01.mdx","c9889f5d62805095","ep01.mdx","ep02",{"id":496,"data":498,"body":571,"filePath":572,"digest":573,"legacyId":574,"deferredRender":133},{"title":499,"description":500,"heroImg":501,"videoId":502,"episodeNumber":503,"date":414,"author":20,"tags":504,"takeaways":505,"resources":528,"jumpTo":535,"summary":571,"featured":58,"transcriptAvailable":133},"Exploring Warp Terminal and Cursor for Productivity","A walkthrough of Warp Terminal and Cursor IDE, demonstrating how these AI-enhanced tools can significantly boost developer productivity and workflow.","../images/thumbnails/ep02.png","QYTe2BBhN1c",2,[150,23],[506,510,513,516,519,522,525],{"text":507,"tools":508},"Warp Terminal offers a more intuitive terminal experience compared to traditional terminals",[509],"Warp Terminal",{"text":511,"tools":512},"Warp's AI features help with command discovery and syntax",[509],{"text":514,"tools":515},"Warp is great for both beginners and experienced developers",[509],{"text":517,"tools":518},"Cursor streamlines the coding process with AI assistance",[31],{"text":520,"tools":521},"Cursor is excellent for code review and refactoring",[31],{"text":523,"tools":524},"Cursor helps write better documentation",[31],{"text":526,"tools":527},"Cursor is useful for learning new programming concepts through AI explanations",[31],[529,532],{"name":509,"url":530,"description":531,"featured":58},"https://warp.dev/","Modern AI-powered terminal application with intelligent command assistance",{"name":31,"url":533,"description":534,"featured":58},"https://cursor.sh/","AI-enhanced code editor built on VSCode for improved development workflow",[536,539,542,545,548,552,555,559,563,567],{"title":537,"url":538,"timestamp":71},"Introduction to Warp Terminal","https://youtu.be/QYTe2BBhN1c?t=0",{"title":540,"url":541,"timestamp":83},"Features of Warp Terminal","https://youtu.be/QYTe2BBhN1c?t=180",{"title":543,"url":544,"timestamp":87},"Introduction to Cursor","https://youtu.be/QYTe2BBhN1c?t=360",{"title":546,"url":547,"timestamp":95},"Reviewing Python code with Cursor","https://youtu.be/QYTe2BBhN1c?t=540",{"title":549,"url":550,"timestamp":551},"PEP8 formatting assistance","https://youtu.be/QYTe2BBhN1c?t=720","00:12:00",{"title":553,"url":554,"timestamp":107},"Fixing Datadog API integration","https://youtu.be/QYTe2BBhN1c?t=900",{"title":556,"url":557,"timestamp":558},"API key environment variables","https://youtu.be/QYTe2BBhN1c?t=1080","00:18:00",{"title":560,"url":561,"timestamp":562},"Cursor's documentation capabilities","https://youtu.be/QYTe2BBhN1c?t=1260","00:21:00",{"title":564,"url":565,"timestamp":566},"Comparing AI tools and workflows","https://youtu.be/QYTe2BBhN1c?t=1440","00:24:00",{"title":568,"url":569,"timestamp":570},"Final thoughts and conclusion","https://youtu.be/QYTe2BBhN1c?t=1620","00:27:00","In this second episode, Jason and Ryan explore AI-powered terminal and code editor tools that enhance the development experience. They start by diving into Warp Terminal, a modern terminal application that intelligently understands commands, offers AI-powered suggestions, and provides a more user-friendly interface compared to traditional terminals. The discussion then shifts to Cursor, an AI-enhanced code editor built on VSCode that helps with code generation, refactoring, and documentation. They demonstrate Cursor's capabilities by examining and improving Python code for a Datadog integration, showing how AI assistants can identify PEP8 formatting issues and suggest improvements. Throughout the episode, they highlight how these tools can make development more efficient while maintaining good coding practices.","src/content/episodes/ep02.mdx","8b28ba5274aa33ec","ep02.mdx","ep03",{"id":575,"data":577,"body":655,"filePath":656,"digest":657,"legacyId":658,"deferredRender":133},{"title":578,"description":579,"heroImg":580,"videoId":581,"episodeNumber":582,"date":414,"author":20,"tags":583,"takeaways":585,"resources":603,"jumpTo":615,"summary":655,"featured":58,"transcriptAvailable":133},"Automatic1111 and Local Text-to-Image Generation","A guide to setting up and using Automatic1111 for local text-to-image generation, covering installation, configuration, and effective prompt techniques.","../images/thumbnails/ep03.png","l2H0HADOa5o",3,[584],"image-gen",[586,591,594,597,600],{"text":587,"tools":588},"Automatic1111 provides a web UI for Stable Diffusion image generation models",[589,590],"Automatic1111","Stable Diffusion",{"text":592,"tools":593},"Local image generation is slower but offers privacy, offline access, and cost savings",[589],{"text":595,"tools":596},"Older models like SD 1.5 have limitations but are faster than newer ones",[590],{"text":598,"tools":599},"Prompt engineering with positive and negative prompts can improve generation results",[589],{"text":601,"tools":602},"The tool can be useful for brainstorming, ideation, and inspiration rather than final assets",[589],[604,608,611],{"name":605,"url":606,"description":607,"featured":58},"Automatic1111 GitHub Repository","https://github.com/AUTOMATIC1111/stable-diffusion-webui","Main repository for the Stable Diffusion web UI",{"name":590,"url":609,"description":610,"featured":58},"https://stability.ai/stable-diffusion","Official Stable Diffusion model and documentation",{"name":612,"url":613,"description":614,"featured":58},"Hugging Face Spaces","https://huggingface.co/spaces","Collection of AI model demos and spaces",[616,619,623,627,631,635,639,643,647,651],{"title":617,"url":618,"timestamp":71},"Introduction to Automatic1111","https://youtu.be/l2H0HADOa5o?t=0",{"title":620,"url":621,"timestamp":622},"Overview of Automatic1111 and its features","https://youtu.be/l2H0HADOa5o?t=184","00:03:04",{"title":624,"url":625,"timestamp":626},"Installing Automatic1111 and connection to Gradio","https://youtu.be/l2H0HADOa5o?t=317","00:05:17",{"title":628,"url":629,"timestamp":630},"Discussing options for local vs. cloud deployment","https://youtu.be/l2H0HADOa5o?t=411","00:06:51",{"title":632,"url":633,"timestamp":634},"First image generation attempt","https://youtu.be/l2H0HADOa5o?t=486","00:08:06",{"title":636,"url":637,"timestamp":638},"Prompt engineering techniques for better results","https://youtu.be/l2H0HADOa5o?t=633","00:10:33",{"title":640,"url":641,"timestamp":642},"Working with negative prompts","https://youtu.be/l2H0HADOa5o?t=737","00:12:17",{"title":644,"url":645,"timestamp":646},"Comparing local generation vs. online options","https://youtu.be/l2H0HADOa5o?t=979","00:16:19",{"title":648,"url":649,"timestamp":650},"Limitations of older Stable Diffusion models","https://youtu.be/l2H0HADOa5o?t=1153","00:19:13",{"title":652,"url":653,"timestamp":654},"Final thoughts and practical applications","https://youtu.be/l2H0HADOa5o?t=1389","00:23:09","In this episode, Jason Hand explores Automatic1111, a stable diffusion web UI for generating images from text prompts. He walks through the installation process using a precompiled version, sets it up locally, and demonstrates various features of the interface. Jason shows how to generate images using text prompts, adjust parameters like sampling methods and steps, and explores additional features like upscaling, inpainting, and img2img conversion. He also demonstrates how to use extensions like ControlNet to provide more control over image generation. The episode provides a comprehensive overview of Automatic1111's capabilities for anyone interested in text-to-image generation.","src/content/episodes/ep03.mdx","b949c9008d0d5d93","ep03.mdx","ep04",{"id":659,"data":661,"body":725,"filePath":726,"digest":727,"legacyId":728,"deferredRender":133},{"title":662,"description":663,"heroImg":664,"videoId":665,"episodeNumber":666,"date":414,"author":20,"tags":667,"takeaways":668,"resources":687,"jumpTo":700,"summary":725,"featured":58,"transcriptAvailable":133},"Building a Secure Feedback Form with Datadog Logs with Claude Code","How to create a secure feedback form that captures user input and sends it to Datadog for logging and analysis, built with Claude Code assistance.","../images/thumbnails/ep04.png","ciLO96MDFbE",4,[416,148],[669,673,678,681,684],{"text":670,"tools":671},"Claude Code can effectively help build functional websites and solve complex integration challenges",[672],"Claude Code",{"text":674,"tools":675},"GitHub Pages has CORS limitations for API calls, while Netlify offers better support for dynamic functionality",[676,677],"GitHub Pages","Netlify",{"text":679,"tools":680},"Environment variables in Netlify provide a secure way to store API keys",[677],{"text":682,"tools":683},"Static websites can be enhanced with third-party services through secure API integrations",[339],{"text":685,"tools":686},"Datadog can be used in creative ways, such as capturing form submissions as logs",[339],[688,692,696],{"name":689,"url":690,"description":691,"featured":58},"Claude Code GitHub","https://github.com/anthropics/claude-code","AI-powered coding assistant for building applications",{"name":693,"url":694,"description":695,"featured":58},"Netlify Documentation","https://docs.netlify.com/","Documentation for Netlify hosting and deployment platform",{"name":697,"url":698,"description":699,"featured":58},"Datadog API Documentation","https://docs.datadoghq.com/api/latest/","Complete API reference for Datadog services",[701,704,707,710,713,716,719,722],{"title":702,"url":703,"timestamp":71},"Introduction to Claude Code and project goals","https://youtu.be/ciLO96MDFbE?t=0",{"title":705,"url":706,"timestamp":79},"Explaining the Datadog logging integration plan","https://youtu.be/ciLO96MDFbE?t=120",{"title":708,"url":709,"timestamp":83},"Discussing GitHub Pages limitations and secrets","https://youtu.be/ciLO96MDFbE?t=180",{"title":711,"url":712,"timestamp":284},"Overview of GitHub actions for deployment","https://youtu.be/ciLO96MDFbE?t=300",{"title":714,"url":715,"timestamp":87},"Previous experience with Claude Code","https://youtu.be/ciLO96MDFbE?t=360",{"title":717,"url":718,"timestamp":91},"Setting up the Claude Code environment","https://youtu.be/ciLO96MDFbE?t=480",{"title":720,"url":721,"timestamp":95},"Crafting detailed instructions for Claude Code","https://youtu.be/ciLO96MDFbE?t=540",{"title":723,"url":724,"timestamp":551},"Waiting for Claude Code's file generation","https://youtu.be/ciLO96MDFbE?t=720","Jason demonstrates using Claude Code to build a secure feedback form that sends data to Datadog logs. He explores GitHub Pages limitations, secure API key storage with GitHub Secrets, and implementation of the Datadog logging API. Throughout the session, he walks through the process of converting a GitHub repository to a GitHub Pages deployment, highlighting the challenges of working with static websites while maintaining security. The episode showcases how AI-assisted development can help create dynamic functionality within a static site context, implementing secure API integrations and form handling.","src/content/episodes/ep04.mdx","426912ddb8908be7","ep04.mdx","ep05",{"id":729,"data":731,"body":803,"filePath":804,"digest":805,"legacyId":806,"deferredRender":133},{"title":732,"description":733,"heroImg":734,"videoId":735,"episodeNumber":736,"date":414,"author":20,"tags":737,"takeaways":738,"resources":757,"jumpTo":765,"summary":803,"featured":58,"transcriptAvailable":133},"Using Claude Code for Automated HTML Updates and Styling","A demonstration of how Claude Code can automate HTML updates and apply consistent styling across a website, improving efficiency and maintainability.","../images/thumbnails/ep05.png","5ovKpnUeCb8",5,[416,148],[739,742,745,748,751,754],{"text":740,"tools":741},"Claude Code can efficiently update HTML/CSS without requiring manual coding",[672],{"text":743,"tools":744},"Using AI assistants for website maintenance saves significant time",[672],{"text":746,"tools":747},"Consistent styling across pages improves user experience",[672],{"text":749,"tools":750},"Adding proper navigation and chapter markers enhances content accessibility",[672],{"text":752,"tools":753},"Claude can read and understand complex HTML structures to make targeted changes",[672],{"text":755,"tools":756},"Website maintenance becomes conversational rather than technical when using AI",[672],[758,761],{"name":672,"url":759,"description":760,"featured":58},"https://claude.ai/claude-code","AI-powered coding assistant for automated development tasks",{"name":762,"url":763,"description":764,"featured":58},"GitHub Repository for AI Lab Experiments","https://github.com/jasonhand/ai-tools-experiments","Source code repository for the AI Tools Lab website",[766,769,773,777,781,784,788,792,796,799],{"title":767,"url":768,"timestamp":71},"Introduction to website updates using Claude Code","https://youtu.be/5ovKpnUeCb8?t=0",{"title":770,"url":771,"timestamp":772},"Demonstrating inconsistencies across episode pages","https://youtu.be/5ovKpnUeCb8?t=90","00:01:30",{"title":774,"url":775,"timestamp":776},"Starting a Claude chat to standardize page layouts","https://youtu.be/5ovKpnUeCb8?t=150","00:02:30",{"title":778,"url":779,"timestamp":780},"Claude examining HTML structure differences","https://youtu.be/5ovKpnUeCb8?t=270","00:04:30",{"title":782,"url":783,"timestamp":87},"Reviewing Claude's transcript navigation improvements","https://youtu.be/5ovKpnUeCb8?t=360",{"title":785,"url":786,"timestamp":787},"Adding episode navigation sections to page bottoms","https://youtu.be/5ovKpnUeCb8?t=450","00:07:30",{"title":789,"url":790,"timestamp":791},"Fixing container structure and spacing issues","https://youtu.be/5ovKpnUeCb8?t=570","00:09:30",{"title":793,"url":794,"timestamp":795},"Creating chapter markers for better video navigation","https://youtu.be/5ovKpnUeCb8?t=630","00:10:30",{"title":797,"url":798,"timestamp":551},"Renaming sections and updating links","https://youtu.be/5ovKpnUeCb8?t=720",{"title":800,"url":801,"timestamp":802},"Planning to split multi-video episodes and conclusion","https://youtu.be/5ovKpnUeCb8?t=780","00:13:00","In this second part of Jason's exploration of Claude Code, he continues building his feedback form application that sends data to Datadog. After encountering CORS issues in the previous episode, Jason shows how Claude Code helped him implement a Node.js proxy server solution to bypass these limitations. He walks through the deployment process on Netlify, explaining how to configure environment variables to securely store the Datadog API keys. Jason demonstrates the completed application, showing how the form collects user feedback and successfully transmits it to Datadog's logs API. He highlights how Claude Code significantly simplified the development process, allowing him to create a functional web application with back-end components despite having limited coding experience. The episode showcases the potential of AI-assisted development tools to make coding more accessible.","src/content/episodes/ep05.mdx","aca8d3e27e49c6c4","ep05.mdx","ep06",{"id":807,"data":809,"body":881,"filePath":882,"digest":883,"legacyId":884,"deferredRender":133},{"title":810,"description":811,"heroImg":812,"videoId":813,"episodeNumber":814,"date":414,"author":20,"tags":815,"takeaways":816,"resources":832,"jumpTo":842,"summary":881,"featured":58,"transcriptAvailable":133},"Using Cursor and Claude to Solve Record Search Bugs","Following the journey of using Claude Code to implement substantial changes to a personal website, from planning to execution and troubleshooting.","../images/thumbnails/ep06.png","OxHCfE1bFBs",6,[416,148],[817,820,823,826,829],{"text":818,"tools":819},"Cursor with Claude can quickly identify and fix complex bugs in web applications",[31,44],{"text":821,"tools":822},"The Vinyl Viewer bug occurred because the click handler used the original data array instead of the filtered array",[31,44],{"text":824,"tools":825},"Claude was able to diagnose the issue without requiring extensive prompting",[44],{"text":827,"tools":828},"Cursor provides a more integrated experience than standard chat interfaces for coding tasks",[31],{"text":830,"tools":831},"AI assistants can help debug code even on projects that haven't been maintained for months",[31,44],[833,834,838],{"name":31,"url":533,"description":534,"featured":58},{"name":835,"url":836,"description":837,"featured":58},"Vinyl Viewer GitHub Repository","https://github.com/jasonhand/vinyl-viewer","Source code for the vinyl record collection viewer application",{"name":839,"url":840,"description":841,"featured":58},"Vinyl Viewer Live Demo","https://jasonhand.github.io/vinyl-viewer/","Live demonstration of the vinyl record collection application",[843,846,850,853,857,861,865,869,873,877],{"title":844,"url":845,"timestamp":71},"Introduction to using Claude Code for website updates","https://youtu.be/OxHCfE1bFBs?t=0",{"title":847,"url":848,"timestamp":849},"Introducing the Vinyl Viewer weekend project","https://youtu.be/OxHCfE1bFBs?t=42","00:00:42",{"title":851,"url":852,"timestamp":264},"Discovering the search functionality bug with Frank Zappa records","https://youtu.be/OxHCfE1bFBs?t=118",{"title":854,"url":855,"timestamp":856},"Setting up the Cursor environment and connecting to the project","https://youtu.be/OxHCfE1bFBs?t=170","00:02:50",{"title":858,"url":859,"timestamp":860},"Describing the bug precisely to Claude","https://youtu.be/OxHCfE1bFBs?t=240","00:04:00",{"title":862,"url":863,"timestamp":864},"Sharing the index and script.js files with Claude","https://youtu.be/OxHCfE1bFBs?t=368","00:06:08",{"title":866,"url":867,"timestamp":868},"Claude identifies the filtered data array issue","https://youtu.be/OxHCfE1bFBs?t=429","00:07:09",{"title":870,"url":871,"timestamp":872},"Applying Claude's code fix to the script file","https://youtu.be/OxHCfE1bFBs?t=490","00:08:10",{"title":874,"url":875,"timestamp":876},"Investigating why the fix didn't work and making adjustments","https://youtu.be/OxHCfE1bFBs?t=782","00:13:02",{"title":878,"url":879,"timestamp":880},"Testing again with the new build and confirming the fix works","https://youtu.be/OxHCfE1bFBs?t=954","00:15:54","In this episode, Jason Hand explores how to use Cursor with Claude to diagnose and fix a bug in his weekend project \"Vinyl Viewer,\" a web application that displays his record collection. The application has a search functionality that correctly filters records but incorrectly displays record details when users click on search results. Jason demonstrates how Cursor with Claude quickly identifies the root cause: when filtering records, the application creates a filtered data array, but the click handler incorrectly references the original data array instead of the filtered data. After implementing Claude's suggested fix, Jason successfully resolves the bug that had persisted for ten months, enabling proper display of record details from search results.","src/content/episodes/ep06.mdx","5334475156f3706f","ep06.mdx","ep07",{"id":885,"data":887,"body":958,"filePath":959,"digest":960,"legacyId":961,"deferredRender":133},{"title":888,"description":889,"heroImg":890,"videoId":891,"episodeNumber":892,"date":414,"author":20,"tags":893,"takeaways":895,"resources":912,"jumpTo":920,"summary":958,"featured":58,"transcriptAvailable":133},"Using Cursor and Claude to Fix CSS Layout Issues","A practical debugging session using Cursor IDE and Claude to identify and fix complex search functionality bugs in a record management system.","../images/thumbnails/ep07.png","9V5QlhpqBbw",7,[23,148,894],"debugging",[896,899,903,906,909],{"text":897,"tools":898},"Cursor with Claude can quickly identify and fix CSS positioning issues",[31,44],{"text":900,"tools":901},"When fixing one CSS issue, be mindful of how it may affect other elements (z-index conflicts)",[902],"CSS",{"text":904,"tools":905},"AI assistants can provide detailed explanations of CSS problems and their solutions",[31,44],{"text":907,"tools":908},"Testing after each code change is crucial to catch unexpected side effects",[31],{"text":910,"tools":911},"CSS fixes often require multiple iterations to fully resolve all related issues",[902],[913,914,915,919],{"name":31,"url":533,"description":534,"featured":58},{"name":839,"url":840,"description":841,"featured":58},{"name":916,"url":917,"description":918,"featured":58},"Ignite Karaoke GitHub Repository","https://github.com/jasonhand/ignite-karaoke","Source code for the Ignite Karaoke presentation application",{"name":835,"url":836,"description":837,"featured":58},[921,924,928,932,935,939,943,946,950,954],{"title":922,"url":923,"timestamp":71},"Introduction to the bug hunting session in Vinyl Viewer","https://youtu.be/9V5QlhpqBbw?t=0",{"title":925,"url":926,"timestamp":927},"Introduction to the Ignite Karaoke project","https://youtu.be/9V5QlhpqBbw?t=119","00:01:59",{"title":929,"url":930,"timestamp":931},"Explaining the concept and functionality of Ignite Karaoke","https://youtu.be/9V5QlhpqBbw?t=182","00:03:02",{"title":933,"url":934,"timestamp":860},"Demonstrating the image display issue with gap at top","https://youtu.be/9V5QlhpqBbw?t=240",{"title":936,"url":937,"timestamp":938},"Setting up the project in Cursor","https://youtu.be/9V5QlhpqBbw?t=308","00:05:08",{"title":940,"url":941,"timestamp":942},"Explaining the CSS positioning problem to Claude","https://youtu.be/9V5QlhpqBbw?t=419","00:06:59",{"title":944,"url":945,"timestamp":95},"Implementing first CSS changes to fix the gap","https://youtu.be/9V5QlhpqBbw?t=540",{"title":947,"url":948,"timestamp":949},"Addressing the z-index issue affecting button clickability","https://youtu.be/9V5QlhpqBbw?t=662","00:11:02",{"title":951,"url":952,"timestamp":953},"Final CSS adjustments for footer link functionality","https://youtu.be/9V5QlhpqBbw?t=843","00:14:03",{"title":955,"url":956,"timestamp":957},"Final testing and confirming all issues are fixed","https://youtu.be/9V5QlhpqBbw?t=904","00:15:04","In this episode, Jason demonstrates how to use Cursor with Claude to identify and fix CSS positioning issues in his Ignite Karaoke project. The web application has layout problems: a noticeable gap at the top of displayed images and interactive elements that aren't functioning properly due to z-index conflicts. Jason walks through the process of explaining these issues to Claude, implementing multiple rounds of CSS fixes to address the gap problem, and then resolving secondary issues with button clickability. The episode showcases how AI tools can efficiently diagnose complex CSS problems and provide targeted solutions that fix layout issues while maintaining all functionality.","src/content/episodes/ep07.mdx","8ddc7d114d97bab5","ep07.mdx","ep08",{"id":962,"data":964,"body":1024,"filePath":1025,"digest":1026,"legacyId":1027,"deferredRender":133},{"title":888,"description":965,"heroImg":966,"videoId":967,"episodeNumber":968,"date":414,"author":20,"tags":969,"takeaways":970,"resources":989,"jumpTo":993,"summary":1024,"featured":58,"transcriptAvailable":133},"A step-by-step walkthrough of diagnosing and resolving complicated CSS layout issues with the help of Cursor's AI-powered assistance and Claude.","../images/thumbnails/ep08.png","-yNJmVCR-nM",8,[23,148,894,416],[971,974,977,980,983,986],{"text":972,"tools":973},"Cursor with Claude effectively diagnoses and fixes complex CSS positioning issues",[31,44],{"text":975,"tools":976},"Fixing one CSS issue may create other problems due to dependencies between elements",[902],{"text":978,"tools":979},"Z-index conflicts are a common challenge when styling overlapping web elements",[902],{"text":981,"tools":982},"CSS debugging often requires multiple iterations to resolve all related issues",[902],{"text":984,"tools":985},"AI assistants can provide detailed explanations of CSS problems and solutions",[31,44],{"text":987,"tools":988},"Testing after each change is crucial to catch unintended side effects",[31],[990,991,992],{"name":31,"url":533,"description":534,"featured":58},{"name":916,"url":917,"description":918,"featured":58},{"name":835,"url":836,"description":837,"featured":58},[994,997,999,1002,1005,1007,1010,1013,1016,1020],{"title":995,"url":996,"timestamp":71},"Introduction to fixing CSS problems in the Ignite Karaoke project","https://youtu.be/-yNJmVCR-nM?t=0",{"title":925,"url":998,"timestamp":79},"https://youtu.be/-yNJmVCR-nM?t=120",{"title":1000,"url":1001,"timestamp":83},"Explaining the concept of Ignite Karaoke and its features","https://youtu.be/-yNJmVCR-nM?t=180",{"title":1003,"url":1004,"timestamp":860},"Demonstrating the CSS gap issue with image display","https://youtu.be/-yNJmVCR-nM?t=240",{"title":936,"url":1006,"timestamp":284},"https://youtu.be/-yNJmVCR-nM?t=300",{"title":940,"url":1008,"timestamp":1009},"https://youtu.be/-yNJmVCR-nM?t=420","00:07:00",{"title":1011,"url":1012,"timestamp":95},"Implementing first CSS changes to fix the space issue","https://youtu.be/-yNJmVCR-nM?t=540",{"title":1014,"url":1015,"timestamp":551},"Implementing z-index changes to fix button interactions","https://youtu.be/-yNJmVCR-nM?t=720",{"title":1017,"url":1018,"timestamp":1019},"Adding final CSS fixes for footer links","https://youtu.be/-yNJmVCR-nM?t=840","00:14:00",{"title":1021,"url":1022,"timestamp":1023},"Discussing image loading and potential dead links","https://youtu.be/-yNJmVCR-nM?t=960","00:16:00","In this episode, Jason continues his exploration of using AI tools for debugging code by focusing on his \"Ignite Karaoke\" project, a web application that displays random images for users to improvise presentations around. After successfully fixing the search functionality in his Vinyl Viewer application in the previous episode, Jason now tackles a layout issue in Ignite Karaoke where images display with excessive space at the top of the screen. Using Cursor with Claude, Jason analyzes the CSS positioning problem and implements a solution by adjusting the margin and z-index settings. He demonstrates how the AI quickly identifies the root cause and suggests precise changes to fix the layout issue. Throughout the episode, Jason highlights how AI-assisted debugging tools like Cursor can efficiently solve specific coding problems, saving developers time and frustration when dealing with CSS and layout challenges.","src/content/episodes/ep08.mdx","23db6b96baee549f","ep08.mdx","ep09",{"id":1028,"data":1030,"body":1107,"filePath":1108,"digest":1109,"legacyId":1110,"deferredRender":133},{"title":1031,"description":1032,"heroImg":1033,"videoId":1034,"episodeNumber":1035,"date":414,"author":20,"tags":1036,"takeaways":1037,"resources":1059,"jumpTo":1075,"summary":1107,"featured":58,"transcriptAvailable":133},"From GTC to Website Building with AI Tools","Insights from NVIDIA's GTC conference and how the latest AI advancements can be applied to website development using various AI tools and techniques.","../images/thumbnails/ep09.png","IW9GjOzoFAw",9,[416],[1038,1042,1045,1048,1051,1055],{"text":1039,"tools":1040},"The AI industry is shifting from curiosity to practical implementation, with GTC attendance growing to over 25,000 people",[1041],"NVIDIA GTC",{"text":1043,"tools":1044},"Many organizations are concerned with hallucination detection, security, and cost management as they move AI projects to production",[339],{"text":1046,"tools":1047},"Claude Code can efficiently help build websites and web applications with features like feedback forms and API integrations",[672],{"text":1049,"tools":1050},"AI tools like Claude Code can resolve long-standing bugs and improve UI/UX in existing projects",[672],{"text":1052,"tools":1053},"The concept of \"wallet attacks\" (competitors trying to exhaust your API quotas) is an emerging concern in AI deployment",[1054],"API Management",{"text":1056,"tools":1057},"Serverless functions can help overcome CORS limitations when building web applications that integrate with third-party APIs",[677,1058],"Serverless",[1060,1062,1066,1067,1068,1071],{"name":672,"url":1061,"description":691,"featured":58},"https://claude.ai/code",{"name":1063,"url":1064,"description":1065,"featured":58},"Windsurf IDE","https://winder.ai/","AI-powered development environment",{"name":916,"url":917,"description":918,"featured":58},{"name":835,"url":836,"description":837,"featured":58},{"name":339,"url":1069,"description":1070,"featured":58},"https://www.datadoghq.com/","Monitoring and analytics platform for cloud applications",{"name":1072,"url":1073,"description":1074,"featured":58},"NVIDIA GTC Conference","https://www.nvidia.com/en-us/gtc/","NVIDIA's annual GPU Technology Conference",[1076,1079,1082,1085,1088,1091,1095,1098,1101,1104],{"title":1077,"url":1078,"timestamp":71},"Introduction and catching up since GTC conference","https://youtu.be/IW9GjOzoFAw?t=0",{"title":1080,"url":1081,"timestamp":79},"Jason's experience attending 15+ sessions at GTC","https://youtu.be/IW9GjOzoFAw?t=120",{"title":1083,"url":1084,"timestamp":860},"Physical AI applications at GTC: robots and autonomous vehicles","https://youtu.be/IW9GjOzoFAw?t=240",{"title":1086,"url":1087,"timestamp":87},"Jason's experience at the Datadog booth and common concerns","https://youtu.be/IW9GjOzoFAw?t=360",{"title":1089,"url":1090,"timestamp":91},"Wallet attacks and API cost management concerns","https://youtu.be/IW9GjOzoFAw?t=480",{"title":1092,"url":1093,"timestamp":1094},"Demonstrating the new website with feedback form","https://youtu.be/IW9GjOzoFAw?t=600","00:10:00",{"title":1096,"url":1097,"timestamp":802},"Discussing improvements to the Ignite Karaoke project","https://youtu.be/IW9GjOzoFAw?t=780",{"title":1099,"url":1100,"timestamp":1019},"Showcase of the improved Vinyl Viewer application","https://youtu.be/IW9GjOzoFAw?t=840",{"title":1102,"url":1103,"timestamp":107},"Demonstrating the enhanced A Call of Cats adoption application","https://youtu.be/IW9GjOzoFAw?t=900",{"title":1105,"url":1106,"timestamp":111},"Wrapping up and plans for next episode","https://youtu.be/IW9GjOzoFAw?t=1020","In this episode, Jason Hand and Ryan MacLean discuss their experiences at NVIDIA's GTC conference in San Jose, where over 25,000 attendees gathered for what they described as the 'Super Bowl of AI conferences.' They share insights from the conference, highlighting the shift from curiosity to practical implementation in the AI industry, with many attendees seeking guidance on production readiness, hallucination detection, and security concerns. Jason then demonstrates how he used Claude Code to create a website for their AI tools experiments project, complete with a feedback form that sends data to Datadog.","src/content/episodes/ep09.mdx","a754505305f688a1","ep09.mdx","ep10",{"id":1111,"data":1113,"body":1199,"filePath":1200,"digest":1201,"legacyId":1202,"deferredRender":133},{"title":1114,"description":1115,"heroImg":1116,"videoId":1117,"episodeNumber":1118,"date":414,"author":20,"tags":1119,"takeaways":1120,"resources":1144,"jumpTo":1166,"summary":1199,"featured":58,"transcriptAvailable":133},"First Look at Windsurf & Model Context Protocol (MCP)","An in-depth look at Windsurf IDE compared to Cursor, exploring AI code editor features, the Model Context Protocol (MCP), and effective project planning approaches.","../images/thumbnails/ep10.png","SwQwRsHVjM4",10,[416],[1121,1126,1129,1132,1136,1140],{"text":1122,"tools":1123},"Windsurf offers a free tier with the Cascade model, providing capable AI assistance for code completion and project planning",[1124,1125],"Windsurf","Cascade",{"text":1127,"tools":1128},"Creating a detailed Project Requirements Document (PRD) before coding leads to higher quality AI output",[1124,31],{"text":1130,"tools":1131},"Different AI coding tools have different \"ergonomics\" that may suit different workflows",[1124,31],{"text":1133,"tools":1134},"Using multiple AI assistants in parallel can produce better results through comparing approaches",[1135],"AI Assistants",{"text":1137,"tools":1138},"Model Context Protocol (MCP) is an emerging standard for connecting AI tools with external services like maps, Kubernetes, and more",[48,1139],"Anthropic",{"text":1141,"tools":1142},"AI models tend to have an \"attention span\" limit of around 30-45 minutes before context degradation",[1143],"AI Models",[1145,1148,1150,1154,1158,1162],{"name":1063,"url":1146,"description":1147,"featured":58},"https://podium.video/windsurf","Podium's AI-powered code editor",{"name":31,"url":533,"description":1149,"featured":58},"AI-powered code editor with Claude integration",{"name":1151,"url":1152,"description":1153,"featured":58},"Model Context Protocol (MCP)","https://www.anthropic.com/news/mcp","Anthropic's protocol for connecting AI models to tools",{"name":1155,"url":1156,"description":1157,"featured":58},"LangChain","https://langchain.com/","Framework for building applications with LLMs",{"name":1159,"url":1160,"description":1161,"featured":58},"Lang Graph","https://github.com/langchain-ai/langgraph","Framework for building stateful, multi-actor applications with LLMs",{"name":1163,"url":1164,"description":1165,"featured":58},"TRIZ Methodology","https://www.triz.org/triz","Creative problem-solving methodology mentioned in the episode",[1167,1170,1173,1176,1179,1182,1185,1188,1191,1195],{"title":1168,"url":1169,"timestamp":71},"Introduction and overview of Windsurf IDE","https://youtu.be/SwQwRsHVjM4?t=0",{"title":1171,"url":1172,"timestamp":79},"Discussing proof of concept vs. production development","https://youtu.be/SwQwRsHVjM4?t=120",{"title":1174,"url":1175,"timestamp":860},"Signing up for Windsurf AI features and free plan limitations","https://youtu.be/SwQwRsHVjM4?t=240",{"title":1177,"url":1178,"timestamp":284},"Creating a new project and opening with Windsurf's chat mode","https://youtu.be/SwQwRsHVjM4?t=300",{"title":1180,"url":1181,"timestamp":87},"Demonstrating intelligent code completion in Python","https://youtu.be/SwQwRsHVjM4?t=360",{"title":1183,"url":1184,"timestamp":91},"Using Product Requirements Documents (PRD) for planning","https://youtu.be/SwQwRsHVjM4?t=480",{"title":1186,"url":1187,"timestamp":1094},"Different AI assistance modes and context windows","https://youtu.be/SwQwRsHVjM4?t=600",{"title":1189,"url":1190,"timestamp":1023},"Introduction to MCP (Model Context Protocol)","https://youtu.be/SwQwRsHVjM4?t=960",{"title":1192,"url":1193,"timestamp":1194},"Comparing WindSurf, Cursor and other AI editors","https://youtu.be/SwQwRsHVjM4?t=1200","00:20:00",{"title":1196,"url":1197,"timestamp":1198},"Conclusion and plans for future episodes","https://youtu.be/SwQwRsHVjM4?t=1920","00:32:00","In this episode, Ryan MacLean explores Windsurf, an AI-powered code editor similar to Cursor but with unique features and workflows. He demonstrates how to set up a new Python project, discusses different ways of working with AI coding assistants, and shows how to create a Product Requirements Document (PRD) to guide project development. Ryan highlights the importance of planning before coding, compares Cascade (Windsurf's base model) with Claude's models, and introduces Model Context Protocol (MCP) as an emerging standard for connecting AI tools with external services. Throughout the discussion, Jason and Ryan reflect on the rapidly evolving landscape of developer tools, the different ergonomics of various AI assistants, and strategies for getting the most productive results when building projects with AI assistance.","src/content/episodes/ep10.mdx","5b113b371f8ef7f3","ep10.mdx","ep11",{"id":1203,"data":1205,"body":1284,"filePath":1285,"digest":1286,"legacyId":1287,"deferredRender":133},{"title":1206,"description":1207,"heroImg":1208,"videoId":1209,"episodeNumber":1210,"date":414,"author":20,"tags":1211,"takeaways":1212,"resources":1236,"jumpTo":1251,"summary":1284,"featured":58,"transcriptAvailable":133},"Exploring Llama 4, OpenRouter, and Model Comparison Tools","A hands-on exploration of Meta's Llama 4 model and its massive context window, along with testing various AI models using comparison platforms like OpenRouter and LM Arena.","../images/thumbnails/ep11.png","DkooO8M0Xn8",11,[23,417,150],[1213,1218,1222,1225,1228,1231],{"text":1214,"tools":1215},"Llama 4 features a massive 10+ million token context window, potentially revolutionizing how we work with large documents and complex instructions",[1216,1217],"Llama 4","Meta",{"text":1219,"tools":1220},"Despite large context windows, RAG (Retrieval Augmented Generation) remains valuable for cost efficiency and performance optimization",[1221,1216],"RAG",{"text":1223,"tools":1224},"Expanded context windows enable more comprehensive guardrails and detailed system prompts in production applications",[1216],{"text":1226,"tools":1227},"Even the latest AI models still struggle with certain types of knowledge, particularly specialized programming techniques and niche factual information",[1143],{"text":1229,"tools":1230},"AI hallucinations remain a concern, particularly for factual questions, as demonstrated by the incorrect musician information",[1143],{"text":1232,"tools":1233},"Tools like OpenRouter and LM Arena provide valuable ways to compare different models for specific use cases",[1234,1235],"OpenRouter","LM Arena",[1237,1241,1244,1247],{"name":1238,"url":1239,"description":1240,"featured":58},"Llama 4 on HuggingFace","https://huggingface.co/meta-llama/Meta-Llama-3-8B-Instruct","Try Meta's latest language model",{"name":1234,"url":1242,"description":1243,"featured":58},"https://openrouter.ai/","Platform for comparing and routing between multiple AI models",{"name":1235,"url":1245,"description":1246,"featured":58},"https://lmarena.ai/","Interactive tool for blind comparison testing of language models",{"name":1248,"url":1249,"description":1250,"featured":58},"DeepSeek","https://deepseek.ai/","AI model mentioned in the episode comparisons",[1252,1255,1259,1262,1265,1268,1271,1274,1277,1281],{"title":1253,"url":1254,"timestamp":71},"Introduction and discussion about Llama 4's weekend release","https://youtu.be/DkooO8M0Xn8?t=0",{"title":1256,"url":1257,"timestamp":1258},"Exploring Llama 4 on Hugging Face","https://youtu.be/DkooO8M0Xn8?t=60","00:01:00",{"title":1260,"url":1261,"timestamp":79},"Discussion about Llama 4's 10+ million token context window","https://youtu.be/DkooO8M0Xn8?t=120",{"title":1263,"url":1264,"timestamp":860},"Benefits of large context windows for guardrails and PRDs","https://youtu.be/DkooO8M0Xn8?t=240",{"title":1266,"url":1267,"timestamp":284},"Testing Llama 4 with basic questions","https://youtu.be/DkooO8M0Xn8?t=300",{"title":1269,"url":1270,"timestamp":91},"Testing Llama 4 with specific knowledge questions","https://youtu.be/DkooO8M0Xn8?t=480",{"title":1272,"url":1273,"timestamp":107},"Introduction to model comparison tools: OpenRouter","https://youtu.be/DkooO8M0Xn8?t=900",{"title":1275,"url":1276,"timestamp":562},"Introduction to LM Arena for model comparison","https://youtu.be/DkooO8M0Xn8?t=1260",{"title":1278,"url":1279,"timestamp":1280},"Comparing models on music knowledge","https://youtu.be/DkooO8M0Xn8?t=1380","00:23:00",{"title":1282,"url":1283,"timestamp":566},"Discovering LunarCall, a surprising new model","https://youtu.be/DkooO8M0Xn8?t=1440","In this episode, Jason and Ryan explore the freshly released Llama 4 model from Meta, which was just released over the weekend. They dive into its capabilities, testing it on Hugging Face, and discuss its groundbreaking 10+ million token context window. The conversation covers whether such a massive context window might eliminate the need for RAG (Retrieval Augmented Generation) and how it could simplify prompt engineering by allowing for more detailed system prompts and guardrails. They also explore two model comparison platforms—OpenRouter and LM Arena—which allow users to test and compare different AI models side by side. During their exploration, they discover a lesser-known model called LunarCall that surprisingly outperforms others on a specific test. This episode provides valuable insights into the rapidly evolving landscape of AI models and practical tools for comparing their performance.","src/content/episodes/ep11.mdx","c47e791b44bdd380","ep11.mdx","ep12",{"id":1288,"data":1290,"body":1378,"filePath":1379,"digest":1380,"legacyId":1381,"deferredRender":133},{"title":1291,"description":1292,"heroImg":1293,"videoId":1294,"episodeNumber":1295,"date":414,"author":20,"tags":1296,"takeaways":1298,"resources":1323,"jumpTo":1345,"summary":1377,"featured":58,"transcriptAvailable":133},"Cursor Rules, Firebase Studio, and the Evolving IDE Landscape","An exploration of AI Cursor Rules in modern development environments, Google's new Firebase Studio cloud-based IDE, and the evolving landscape of AI-powered development tools across major cloud providers.","../images/thumbnails/ep12.png","EursDsj4dCk",12,[23,417,150,1297],"firebase",[1299,1302,1305,1309,1315,1319],{"text":1300,"tools":1301},"Cursor Rules and project requirements documents (PRDs) are becoming essential for maintaining context in AI-assisted development",[31,1124],{"text":1303,"tools":1304},"Tools like Cursor and WindSurf implement Cursor Rules differently, but both recognize their importance in combating \"AI amnesia\"",[31,1124],{"text":1306,"tools":1307},"Creating rule files can feel like toil, but they dramatically improve the quality and consistency of AI-generated code",[1308],"Cursor Rules",{"text":1310,"tools":1311},"Major cloud providers (Google, Microsoft, Amazon) are each developing their own AI-powered development environments",[1312,1313,1314],"Firebase Studio","Azure AI Studio","Bedrock Studio",{"text":1316,"tools":1317},"Firebase Studio integrates with Google's Gemini model to provide code analysis, suggestions, and other AI-powered features",[1312,1318],"Gemini",{"text":1320,"tools":1321},"API key management and security are crucial considerations when working with AI development environments",[1322],"API Security",[1324,1327,1329,1333,1337,1341],{"name":1312,"url":1325,"description":1326,"featured":58},"https://firebase.google.com/products/studio","Google's new cloud-based IDE powered by Gemini",{"name":31,"url":533,"description":1328,"featured":58},"AI-powered code editor with support for Cursor Rules",{"name":1330,"url":1331,"description":1332,"featured":58},"WindSurf","https://www.windsurf.io/","Another AI-powered IDE with context management features",{"name":1334,"url":1335,"description":1336,"featured":58},"Simon Wardley's Blog","https://blog.gardeviance.org/","Resources on effective rule creation for AI tools",{"name":1338,"url":1339,"description":1340,"featured":58},"GenKit","https://genkit.dev/","Google's TypeScript toolkit for AI-powered web applications",{"name":1342,"url":1343,"description":1344,"featured":58},"Bolt","https://bolt.new/","App building platform mentioned for future exploration",[1346,1349,1352,1355,1358,1361,1364,1367,1370,1373],{"title":1347,"url":1348,"timestamp":71},"Introduction and recap of previous LLAMA 4 discussion","https://youtu.be/EursDsj4dCk?t=0",{"title":1350,"url":1351,"timestamp":1258},"Updates to the AI Tools Lab website","https://youtu.be/EursDsj4dCk?t=60",{"title":1353,"url":1354,"timestamp":83},"Introduction to the importance of Cursor Rules in AI tools","https://youtu.be/EursDsj4dCk?t=180",{"title":1356,"url":1357,"timestamp":860},"Comparing Cursor and WindSurf approaches to context management","https://youtu.be/EursDsj4dCk?t=240",{"title":1359,"url":1360,"timestamp":284},"Discussion of \"AI amnesia\" and the DRY principle","https://youtu.be/EursDsj4dCk?t=300",{"title":1362,"url":1363,"timestamp":1009},"Repositories of Cursor Rules and Simon Wardley's contributions","https://youtu.be/EursDsj4dCk?t=420",{"title":1365,"url":1366,"timestamp":551},"Introduction to Google Cloud Next and Firebase Studio","https://youtu.be/EursDsj4dCk?t=720",{"title":1368,"url":1369,"timestamp":1019},"Exploring the Firebase Studio interface","https://youtu.be/EursDsj4dCk?t=840",{"title":1371,"url":1372,"timestamp":566},"Comparing cloud provider AI development environments","https://youtu.be/EursDsj4dCk?t=1440",{"title":1374,"url":1375,"timestamp":1376},"Conclusion and preview of future topics","https://youtu.be/EursDsj4dCk?t=2460","00:41:00","In this episode, Jason Hand and Ryan MacLean explore two key topics in AI development workflows: the importance of Cursor Rules in AI-powered IDEs and Google's new Firebase Studio. They begin with a recap of their previous discussion on LLAMA 4 and model comparison tools like LM Arena. The conversation then shifts to the critical role of Cursor Rules and project requirement documents in AI coding environments like Cursor and WindSurf, highlighting how these help combat \"AI amnesia\" by preserving context between sessions and reducing repetitive instructions. They discuss different approaches to maintaining context, including ChatGPT's memory features versus explicit Cursor Rules, and how developers are finding solutions to the \"Don't Repeat Yourself\" challenge when working with AI.","In this episode, Jason Hand and Ryan MacLean explore two key topics in AI development workflows: the importance of Cursor Rules in AI-powered IDEs and Google's new Firebase Studio. They begin with a recap of their previous discussion on LLAMA 4 and model comparison tools like LM Arena. The conversation then shifts to the critical role of Cursor Rules and project requirement documents in AI coding environments like Cursor and WindSurf, highlighting how these help combat \"AI amnesia\" by preserving context between sessions and reducing repetitive instructions. They discuss different approaches to maintaining context, including ChatGPT's memory features versus explicit Cursor Rules, and how developers are finding solutions to the \"Don't Repeat Yourself\" challenge when working with AI.\r\n\r\nIn the second part, they explore Firebase Studio, a newly announced cloud-based IDE from Google that integrates with Gemini models. They test its capabilities by importing an existing project—a simple dog breed viewer app—and discuss the interface, API key management, and potential use cases. They compare Firebase Studio with similar offerings from Microsoft (Azure AI Studio) and Amazon (Bedrock Studio), noting that cloud providers are increasingly building their own AI-powered development environments. Throughout their exploration, they reflect on important considerations for developers, including security practices, the need for proper monitoring, and the balance between ease of use and deliberate planning in AI application development.","src/content/episodes/ep12.mdx","7aa2f3d774cc0f61","ep12.mdx","ep13",{"id":1382,"data":1384,"body":1473,"filePath":1474,"digest":1475,"legacyId":1476,"deferredRender":133},{"title":1385,"description":1386,"heroImg":1387,"videoId":1388,"episodeNumber":1389,"date":414,"author":20,"tags":1390,"takeaways":1392,"resources":1418,"jumpTo":1438,"summary":1473,"featured":58,"transcriptAvailable":133},"Exploring Bolt: Rapid App Development with AI-Powered Templates","Explore Bolt, an AI-powered development tool that enables rapid app creation through templates and natural language prompts, perfect for prototyping and concept visualization.","../images/thumbnails/ep13.png","hc-hKcoP3Pw",13,[1391,24],"bolt",[1393,1396,1399,1405,1408,1411,1414],{"text":1394,"tools":1395},"Bolt provides a template-based approach to rapidly build web and mobile applications",[1342],{"text":1397,"tools":1398},"It's particularly useful for prototyping and \"vibe coding\" - quickly visualizing concepts",[1342],{"text":1400,"tools":1401},"The tool works with multiple frameworks including React, Next.js, and Expo",[1342,1402,1403,1404],"React","Next.js","Expo",{"text":1406,"tools":1407},"Users can download their code and continue development in their preferred IDE",[1342],{"text":1409,"tools":1410},"While it may not be ideal for production-grade applications, it excels at exploration and prototyping",[1342],{"text":1412,"tools":1413},"Screenshot-based programming allows for quickly recreating interfaces from images",[1342],{"text":1415,"tools":1416},"Bolt offers both hosted and open-source versions for different use cases",[1342,1417],"Bolt DIY",[1419,1423,1427,1431,1435],{"name":1420,"url":1421,"description":1422,"featured":58},"Bolt Website","https://bolt.new","The hosted version of the Bolt AI-powered development tool",{"name":1424,"url":1425,"description":1426,"featured":58},"Bolt DIY (Open Source Version)","https://bolt.diy","Free offline version that can connect to various AI models",{"name":1428,"url":1429,"description":1430,"featured":58},"Expo Framework","https://expo.dev","Mobile app development framework supported by Bolt",{"name":1432,"url":1433,"description":1434,"featured":58},"Supabase","https://supabase.com","Database solution mentioned in the discussion",{"name":1234,"url":1436,"description":1437,"featured":58},"https://openrouter.ai","Service for accessing various AI models",[1439,1442,1445,1449,1453,1456,1459,1462,1465,1469],{"title":1440,"url":1441,"timestamp":71},"Introduction and catching up on AI developments","https://youtu.be/hc-hKcoP3Pw?t=0",{"title":1443,"url":1444,"timestamp":1258},"Reviewing previous conversations about AI coding tools","https://youtu.be/hc-hKcoP3Pw?t=60",{"title":1446,"url":1447,"timestamp":1448},"Exploring the AI-tools-lab.com website features","https://youtu.be/hc-hKcoP3Pw?t=128","00:02:08",{"title":1450,"url":1451,"timestamp":1452},"Introduction to Bolt and its template-based approach","https://youtu.be/hc-hKcoP3Pw?t=253","00:04:13",{"title":1454,"url":1455,"timestamp":87},"Building an app with Bolt using Astro framework","https://youtu.be/hc-hKcoP3Pw?t=360",{"title":1457,"url":1458,"timestamp":1094},"Creating a Japanese translation app with Expo","https://youtu.be/hc-hKcoP3Pw?t=600",{"title":1460,"url":1461,"timestamp":107},"Troubleshooting API integration and translation features","https://youtu.be/hc-hKcoP3Pw?t=900",{"title":1463,"url":1464,"timestamp":562},"Demonstrating screenshot-based programming in Bolt","https://youtu.be/hc-hKcoP3Pw?t=1260",{"title":1466,"url":1467,"timestamp":1468},"Exploring deployment options and Netlify integration","https://youtu.be/hc-hKcoP3Pw?t=1470","00:24:30",{"title":1470,"url":1471,"timestamp":1472},"Discussion on security considerations for generated apps","https://youtu.be/hc-hKcoP3Pw?t=1710","00:28:30","In this conversation, Ryan MacLean and Jason Hand explore Bolt, a browser-based AI-powered development tool for quickly building web and mobile applications. Ryan demonstrates how Bolt enables developers to start with templates and build functioning apps through natural language prompts. The tool shines in its ability to create rapid prototypes or what has been termed \"vibe coding\" - allowing users to quickly visualize concepts before committing to deeper development. They examine a translation app Ryan built that converts English to Japanese text with Furigana pronunciation guides, highlighting both Bolt's capabilities and limitations. While the app encountered some implementation challenges, it demonstrated Bolt's strength in quickly exploring frameworks and approaches. The discussion compares Bolt to other AI coding tools like Cursor, Claude Code, and Windsurf, noting that Bolt is particularly effective for initial prototyping but users may want to download and transfer projects to more robust IDEs for production refinement.","src/content/episodes/ep13.mdx","bef3d1a6f8b76f86","ep13.mdx","ep14",{"id":1477,"data":1479,"body":1579,"filePath":1580,"digest":1581,"legacyId":1582,"deferredRender":133},{"title":1480,"description":1481,"heroImg":1482,"videoId":1483,"episodeNumber":1484,"date":1485,"author":20,"tags":1486,"takeaways":1488,"resources":1513,"jumpTo":1541,"summary":1579,"featured":58,"transcriptAvailable":133},"Claude 3.7 Sonnet Plugins: AI Integration with Gmail, Drive and Calendar","Discover how Claude 3.7 Sonnet integrates with Gmail, Google Drive and Calendar to transform everyday G Suite usage with AI-powered insights and recommendations.","../images/thumbnails/ep14.png","TbacJ7HdE6Q",14,"2025-04-28T00:00:00.000Z",[148,1487,150],"plugins",[1489,1495,1498,1501,1504,1507,1510],{"text":1490,"tools":1491},"Claude 3.7 Sonnet integrates with Gmail, Google Drive, and Calendar through simple OAuth authentication",[44,1492,1493,1494],"Gmail","Google Drive","Calendar",{"text":1496,"tools":1497},"The AI can analyze massive email volumes (3.5+ million emails) and generate personalized interactive dashboards",[44,1492],{"text":1499,"tools":1500},"Claude creates customized email filter recommendations with ready-to-use filter language",[44,1492],{"text":1502,"tools":1503},"The system generates different insights on subsequent runs, showing varied approaches to inbox management",[44],{"text":1505,"tools":1506},"Integration provides practical tools for email organization through AI-powered visualization and actionable recommendations",[44,1492],{"text":1508,"tools":1509},"Integration with Google Drive includes security recommendations for sensitive data",[44,1493],{"text":1511,"tools":1512},"Calendar management integration can adapt to different personality types and scheduling preferences",[44,1494],[1514,1517,1521,1525,1529,1533,1537],{"name":1515,"url":169,"description":1516,"featured":58},"Claude 3.7 Sonnet (Pro plan)","Anthropic's AI assistant with new plugin capabilities",{"name":1518,"url":1519,"description":1520,"featured":58},"Boomerang for Gmail","https://www.boomeranggmail.com/","Email management tool mentioned as comparison",{"name":1522,"url":1523,"description":1524,"featured":58},"Unroll.me","https://unroll.me/","Email unsubscription service referenced in discussion",{"name":1526,"url":1527,"description":1528,"featured":58},"Zapier","https://zapier.com/","Automation platform for connecting apps",{"name":1530,"url":1531,"description":1532,"featured":58},"IFTTT (If This Then That)","https://ifttt.com/","Automation platform for connecting services",{"name":1534,"url":1535,"description":1536,"featured":58},"Notion Mail","https://www.notion.so/","Email integration with Notion mentioned in discussion",{"name":1538,"url":1539,"description":1540,"featured":58},"Enneagram Institute","https://www.enneagraminstitute.com/","Information about personality types used in calendar management demo",[1542,1545,1548,1551,1554,1557,1560,1563,1566,1569,1572,1576],{"title":1543,"url":1544,"timestamp":71},"Introduction to Claude Desktop plugins and OAuth connection process","https://youtu.be/TbacJ7HdE6Q?t=0",{"title":1546,"url":1547,"timestamp":1258},"Overview of prompts and interactive artifacts in Claude","https://youtu.be/TbacJ7HdE6Q?t=60",{"title":1549,"url":1550,"timestamp":79},"Demonstrating Gmail integration and inbox analysis","https://youtu.be/TbacJ7HdE6Q?t=120",{"title":1552,"url":1553,"timestamp":83},"Reviewing Ryan's email volume and Claude's analysis dashboard","https://youtu.be/TbacJ7HdE6Q?t=180",{"title":1555,"url":1556,"timestamp":860},"Email management recommendations and filter suggestions","https://youtu.be/TbacJ7HdE6Q?t=240",{"title":1558,"url":1559,"timestamp":284},"Different results from multiple runs of the inbox analysis","https://youtu.be/TbacJ7HdE6Q?t=300",{"title":1561,"url":1562,"timestamp":87},"Downloadable TSX files and source code access","https://youtu.be/TbacJ7HdE6Q?t=360",{"title":1564,"url":1565,"timestamp":1009},"Discussion of Google Drive integration and security recommendations","https://youtu.be/TbacJ7HdE6Q?t=420",{"title":1567,"url":1568,"timestamp":91},"Making email organization fun again","https://youtu.be/TbacJ7HdE6Q?t=480",{"title":1570,"url":1571,"timestamp":95},"Claude for Work and enterprise applications","https://youtu.be/TbacJ7HdE6Q?t=540",{"title":1573,"url":1574,"timestamp":1575},"Calendar management based on Enneagram personality types","https://youtu.be/TbacJ7HdE6Q?t=660","00:11:00",{"title":1577,"url":1578,"timestamp":1019},"Discussion of Notion Mail and emerging tool integrations","https://youtu.be/TbacJ7HdE6Q?t=840","In this discussion, Ryan demonstrates new plugin integrations for Claude Desktop, particularly focusing on how Claude 3.7 Sonnet connects with Gmail, Google Drive, and Calendar through OAuth authentication. Ryan walks through the process of integrating these tools and showcases various practical applications that transform everyday G Suite usage. The most impressive feature demonstrated is Claude's ability to analyze Ryan's inbox (containing over 3.5 million emails) and generate interactive React-based dashboards with personalized recommendations for inbox management, complete with visualization of email patterns, customized filter suggestions, and actionable checklists.","src/content/episodes/ep14.mdx","a49e88166854eba2","ep14.mdx","ep15",{"id":1583,"data":1585,"body":1675,"filePath":1676,"digest":1677,"legacyId":1678,"deferredRender":133},{"title":1586,"description":1587,"heroImg":1588,"videoId":1589,"episodeNumber":1590,"date":1485,"author":20,"tags":1591,"takeaways":1593,"resources":1618,"jumpTo":1628,"summary":1675,"featured":58,"transcriptAvailable":133},"AI Tools in Action: Exploring Sora Image Generation and Lovable App Builder","Explore the latest developments in AI tools with Jason Hand and Ryan MacLean as they test image generation with Sora and app building with Lovable.","../images/thumbnails/ep15.png","DcnbH45lfkU",15,[149,1592,584,24],"sora",[1594,1598,1601,1604,1607,1611,1615],{"text":1595,"tools":1596},"AI image generation has significantly improved, especially for text rendering in images",[1597],"Sora",{"text":1599,"tools":1600},"Sora can now create images with professional-looking fonts, proper kerning, and layout",[1597],{"text":1602,"tools":1603},"Lovable is a full-stack development tool similar to Bolt, allowing rapid app creation",[155,1342],{"text":1605,"tools":1606},"The free tier of Lovable offers only five interactions per day",[155],{"text":1608,"tools":1609},"Lovable provides intuitive interfaces, error correction features, and GitHub integration",[155,1610],"GitHub",{"text":1612,"tools":1613},"Generative AI quality has improved to the point where many outputs no longer trigger the \"AI slop\" response",[1614],"AI Generation",{"text":1616,"tools":1617},"Supabase is highlighted as a valuable database solution that integrates well with app-building tools",[1432],[1619,1622,1624,1626],{"name":1597,"url":1620,"description":1621,"featured":58},"https://openai.com/sora","OpenAI's text-to-image and video generation model",{"name":155,"url":172,"description":1623,"featured":58},"Full-stack application builder with AI assistance",{"name":1342,"url":1421,"description":1625,"featured":58},"Similar AI-powered app development tool discussed in previous episodes",{"name":1432,"url":1433,"description":1627,"featured":58},"Database solution mentioned as integrating well with these tools",[1629,1632,1636,1639,1642,1645,1649,1653,1656,1660,1664,1668,1671],{"title":1630,"url":1631,"timestamp":71},"Introduction and recap of previous episodes","https://youtu.be/DcnbH45lfkU?t=0",{"title":1633,"url":1634,"timestamp":1635},"Discussion of AI-generated images for website thumbnails","https://youtu.be/DcnbH45lfkU?t=107","00:01:47",{"title":1637,"url":1638,"timestamp":284},"Examining Sora's image generation capabilities and examples","https://youtu.be/DcnbH45lfkU?t=300",{"title":1640,"url":1641,"timestamp":95},"Looking at 3D cartoon cat renderings from Sora","https://youtu.be/DcnbH45lfkU?t=540",{"title":1643,"url":1644,"timestamp":1094},"Discussing the quality of AI-generated images","https://youtu.be/DcnbH45lfkU?t=600",{"title":1646,"url":1647,"timestamp":1648},"Introduction to Lovable app building tool","https://youtu.be/DcnbH45lfkU?t=738","00:12:18",{"title":1650,"url":1651,"timestamp":1652},"Exploring Lovable's full stack engineering claims","https://youtu.be/DcnbH45lfkU?t=885","00:14:45",{"title":1654,"url":1655,"timestamp":111},"Building a travel notebook app with Lovable","https://youtu.be/DcnbH45lfkU?t=1020",{"title":1657,"url":1658,"timestamp":1659},"Examining Lovable's code editor and GitHub integration","https://youtu.be/DcnbH45lfkU?t=1410","00:23:30",{"title":1661,"url":1662,"timestamp":1663},"Testing the WYSIWYG editor in Lovable","https://youtu.be/DcnbH45lfkU?t=1830","00:30:30",{"title":1665,"url":1666,"timestamp":1667},"Building and fixing errors in the travel notebook app","https://youtu.be/DcnbH45lfkU?t=2100","00:35:00",{"title":1669,"url":1670,"timestamp":1376},"Reviewing Ryan's weather dashboard app","https://youtu.be/DcnbH45lfkU?t=2460",{"title":1672,"url":1673,"timestamp":1674},"Final thoughts and takeaways","https://youtu.be/DcnbH45lfkU?t=2850","00:47:30","In this episode, Jason Hand and Ryan MacLean explore recent developments in AI tools, focusing on image generation with Sora and app building with Lovable. They begin by discussing Jason's experience using Sora to create images for website thumbnails, noting the significant improvement in AI's ability to generate images with text. Both hosts are impressed by how Sora can now produce professional-looking fonts with proper kerning and layout, a capability that wasn't possible until recently. They examine various images Jason created, including Y2K aesthetic thumbnails and 3D cartoon renderings of cats, acknowledging that generative AI has reached a point where many outputs no longer trigger the 'AI slop' response they previously discussed. The conversation then shifts to Lovable, a full-stack development tool similar to Bolt (which they discussed in a previous episode). They explore Lovable's capabilities by building applications - Jason attempts to create a travel notebook app while Ryan builds a weather dashboard. Throughout their hands-on testing, they highlight Lovable's intuitive interface, error correction features, and ability to quickly generate functional applications with minimal input. They discuss limitations of the free tier (which offers only five interactions per day), the GitHub integration options, and how these tools might fit into a developer's workflow. The hosts conclude by reflecting on their evolving perspectives on generative AI tools, with Jason admitting he's warming up to some AI-generated content now that the quality has improved significantly, and both acknowledging Supabase as a valuable database solution that integrates well with these development tools.","src/content/episodes/ep15.mdx","9a7c8654b4507f83","ep15.mdx","ep16",{"id":1679,"data":1681,"body":1772,"filePath":1773,"digest":1774,"legacyId":1775,"deferredRender":133},{"title":1682,"description":1683,"heroImg":1684,"videoId":1685,"episodeNumber":1686,"date":1687,"author":20,"tags":1688,"takeaways":1691,"resources":1709,"jumpTo":1727,"summary":1771,"featured":58,"transcriptAvailable":133},"Enhancing CSS Editing with LLMs: Using Puppeteer for Visual Context","Ryan demonstrates how to leverage Puppeteer's screenshot capabilities through MCP to provide visual context for LLMs, creating a virtuous cycle for CSS editing and design improvements.","../images/thumbnails/ep16.png","duMkcV7d_wo",16,"2025-04-30T00:00:00.000Z",[1689,22,210,1690],"puppeteer","css",[1692,1697,1700,1703,1706],{"text":1693,"tools":1694},"Using visual context through screenshots helps LLMs make better CSS editing decisions than relying on text alone",[1695,1696],"Puppeteer","LLMs",{"text":1698,"tools":1699},"Puppeteer integration with LLMs creates a virtuous feedback cycle for quickly iterating on design changes",[1695,48],{"text":1701,"tools":1702},"The MCP (Model Control Protocol) server is essential for allowing LLMs to interact with local development environments",[48,1695],{"text":1704,"tools":1705},"Working in a test branch provides a safe environment for experimenting with AI-suggested CSS changes",[49,902],{"text":1707,"tools":1708},"Despite requiring manual approval for screenshots, the workflow with Gemini 2.5 Pro is fast enough to create an efficient development experience",[1318,1695],[1710,1713,1717,1719,1723],{"name":1695,"url":1711,"description":1712,"featured":58},"https://pptr.dev/","Headless browser automation library for taking screenshots of websites",{"name":1714,"url":1715,"description":1716,"featured":58},"Model Control Protocol (MCP)","https://github.com/google/model-control-protocol","Protocol for connecting AI models to external tools like Puppeteer",{"name":217,"url":235,"description":1718,"featured":58},"Google's LLM used in the demonstration for CSS suggestions",{"name":1720,"url":1721,"description":1722,"featured":58},"PHP local server","https://www.php.net/manual/en/features.commandline.webserver.php","Used to serve static website files locally for testing",{"name":1724,"url":1725,"description":1726,"featured":58},"CSS documentation","https://developer.mozilla.org/en-US/docs/Web/CSS","Mozilla's comprehensive guide to CSS properties and syntax",[1728,1731,1735,1739,1743,1746,1749,1752,1755,1759,1763,1767],{"title":1729,"url":1730,"timestamp":71},"Introduction to editing CSS with LLMs","https://youtu.be/duMkcV7d_wo?t=0",{"title":1732,"url":1733,"timestamp":1734},"Challenges with CSS complexity and versioning","https://youtu.be/duMkcV7d_wo?t=45","00:00:45",{"title":1736,"url":1737,"timestamp":1738},"Examining the AI tools lab website and its extensive CSS","https://youtu.be/duMkcV7d_wo?t=75","00:01:15",{"title":1740,"url":1741,"timestamp":1742},"Introduction to using Puppeteer for visual context","https://youtu.be/duMkcV7d_wo?t=105","00:01:45",{"title":1744,"url":1745,"timestamp":776},"Setting up PHP to serve the static website locally","https://youtu.be/duMkcV7d_wo?t=150",{"title":1747,"url":1748,"timestamp":83},"First attempt at querying without Puppeteer enabled","https://youtu.be/duMkcV7d_wo?t=180",{"title":1750,"url":1751,"timestamp":860},"Enabling Puppeteer in the MCP server settings","https://youtu.be/duMkcV7d_wo?t=240",{"title":1753,"url":1754,"timestamp":780},"Dealing with screenshot approval requirements","https://youtu.be/duMkcV7d_wo?t=270",{"title":1756,"url":1757,"timestamp":1758},"Getting CSS suggestions based on the screenshot","https://youtu.be/duMkcV7d_wo?t=330","00:05:30",{"title":1760,"url":1761,"timestamp":1762},"Testing CSS changes in a safe test branch","https://youtu.be/duMkcV7d_wo?t=390","00:06:30",{"title":1764,"url":1765,"timestamp":1766},"Handling stalled screenshots and retrying","https://youtu.be/duMkcV7d_wo?t=435","00:07:15",{"title":1768,"url":1769,"timestamp":1770},"Reviewing the implemented header style changes","https://youtu.be/duMkcV7d_wo?t=465","00:07:45","In this presentation, Ryan explores a practical approach to editing CSS with Large Language Models (LLMs), focusing on creating a virtuous cycle of design improvements. He highlights the challenges of working with CSS, particularly for developers familiar with older versions who may struggle with modern CSS syntax and styles. Ryan points out that CSS can be complex, with styles defined in multiple locations, making it difficult to track changes and understand their impact across large codebases that may contain thousands of lines of code spread across numerous files. Ryan demonstrates an innovative solution using Puppeteer through an MCP (Model Control Protocol) server to take screenshots of local websites. This approach allows the LLM to see the visual representation of the site, providing crucial context for making informed CSS recommendations. Throughout the demonstration, Ryan shows how to set up and configure the MCP server, start a local PHP server to host the test site, and use Gemini 2.5 Pro to suggest and implement CSS changes. Despite some workflow challenges such as needing to approve screenshot captures manually, Ryan emphasizes the speed advantages of this approach, noting that the quick feedback cycle creates an efficient workflow that almost mimics real-time browser editing but with AI assistance. The demonstration concludes with a successful modification to the header styling, illustrating the potential of this visual-context approach to AI-assisted CSS editing.","In this presentation, Ryan explores a practical approach to editing CSS with Large Language Models (LLMs), focusing on creating a virtuous cycle of design improvements. He highlights the challenges of working with CSS, particularly for developers familiar with older versions who may struggle with modern CSS syntax and styles. Ryan points out that CSS can be complex, with styles defined in multiple locations, making it difficult to track changes and understand their impact across large codebases that may contain thousands of lines of code spread across numerous files.\r\n\r\nRyan demonstrates an innovative solution using Puppeteer through an MCP (Model Control Protocol) server to take screenshots of local websites. This approach allows the LLM to see the visual representation of the site, providing crucial context for making informed CSS recommendations. Throughout the demonstration, Ryan shows how to set up and configure the MCP server, start a local PHP server to host the test site, and use Gemini 2.5 Pro to suggest and implement CSS changes. Despite some workflow challenges such as needing to approve screenshot captures manually, Ryan emphasizes the speed advantages of this approach, noting that the quick feedback cycle creates an efficient workflow that almost mimics real-time browser editing but with AI assistance. The demonstration concludes with a successful modification to the header styling, illustrating the potential of this visual-context approach to AI-assisted CSS editing.","src/content/episodes/ep16.mdx","4f3220e59f5c5689","ep16.mdx","ep17",{"id":1776,"data":1778,"body":1865,"filePath":1866,"digest":1867,"legacyId":1868,"deferredRender":133},{"title":1779,"description":1780,"heroImg":1781,"videoId":1782,"episodeNumber":1783,"date":1784,"author":20,"tags":1785,"takeaways":1788,"resources":1808,"jumpTo":1827,"summary":1864,"featured":58,"transcriptAvailable":133},"The State of AI 2025: Exploring Developer Tools, Models, and Industry Trends","Jason and Ryan analyze the State of AI 2025 report, examining AI tool popularity, user pain points, and how tools like Google's Notebook LM help synthesize information from multiple sources.","../images/thumbnails/ep17.png","AcPDrBKy_Uw",17,"2025-04-29T00:00:00.000Z",[1786,1787,148,325],"stateofai","notebooklm",[1789,1792,1795,1799,1803],{"text":1790,"tools":1791},"ChatGPT remains the dominant AI model with Claude gaining rapid popularity, but there's a wide ecosystem of AI tools that many developers are still discovering",[53,44],{"text":1793,"tools":1794},"The biggest pain points for AI users remain hallucinations/inaccuracies and context limitations, though these issues are being addressed with newer model versions that offer expanded context windows",[1143],{"text":1796,"tools":1797},"Local model deployment is more common than expected (46% of respondents), likely driven by data privacy concerns rather than cost or performance considerations",[1798],"Local Models",{"text":1800,"tools":1801},"Despite concerns about AI-generated code quality, most developers (40%) report being happy with the current state of AI tools for web development, with only 10% being unhappy",[1802],"AI Development Tools",{"text":1804,"tools":1805},"According to DORA research, while generative AI provides individual productivity gains, it may actually have negative impacts on software delivery at organizational levels, suggesting challenges in team integration",[1806,1807],"DORA","Generative AI",[1809,1813,1817,1821,1825],{"name":1810,"url":1811,"description":1812,"featured":58},"The State of AI 2025 Report by Msty.ai","https://2025.stateofai.dev/en-US/","Comprehensive survey results about AI tool usage discussed throughout the episode",{"name":1814,"url":1815,"description":1816,"featured":58},"TL;DR Newsletter","https://tldr.tech/","Tech newsletter where the hosts discovered the State of AI report",{"name":1818,"url":1819,"description":1820,"featured":58},"DORA Report on Generative AI Impact","https://dora.dev/","Research suggesting that generative AI may have negative impacts on software delivery at organizational levels",{"name":1822,"url":1823,"description":1824,"featured":58},"Google's Notebook LM","https://notebooklm.google.com/","Tool demonstrated for synthesizing information from multiple sources",{"name":1234,"url":1242,"description":1826,"featured":58},"Service mentioned in relation to Cline for accessing multiple AI models",[1828,1831,1835,1838,1842,1846,1849,1852,1856,1860],{"title":1829,"url":1830,"timestamp":71},"Introduction and report identification","https://youtu.be/AcPDrBKy_Uw?t=0",{"title":1832,"url":1833,"timestamp":1834},"Report source and Msty.ai background","https://youtu.be/AcPDrBKy_Uw?t=85","00:01:25",{"title":1836,"url":1837,"timestamp":83},"Demographics of survey respondents","https://youtu.be/AcPDrBKy_Uw?t=180",{"title":1839,"url":1840,"timestamp":1841},"Popular AI model providers and user comments","https://youtu.be/AcPDrBKy_Uw?t=335","00:05:35",{"title":1843,"url":1844,"timestamp":1845},"Exploring IDE tools and lesser-known options","https://youtu.be/AcPDrBKy_Uw?t=536","00:08:56",{"title":1847,"url":1848,"timestamp":551},"IDE pain points and monetary considerations","https://youtu.be/AcPDrBKy_Uw?t=720",{"title":1850,"url":1851,"timestamp":558},"Coding assistants and tools comparison","https://youtu.be/AcPDrBKy_Uw?t=1080",{"title":1853,"url":1854,"timestamp":1855},"AI usage patterns and application types","https://youtu.be/AcPDrBKy_Uw?t=1350","00:22:30",{"title":1857,"url":1858,"timestamp":1859},"Code refactoring needs and quality issues","https://youtu.be/AcPDrBKy_Uw?t=1650","00:27:30",{"title":1861,"url":1862,"timestamp":1863},"Satisfaction with AI tools and psychological impact","https://youtu.be/AcPDrBKy_Uw?t=2040","00:34:00","In this engaging conversation, Jason Hand and Ryan MacLean dive into 'The State of AI 2025' report published by Msty.ai, analyzing the current landscape of AI tools, models, and developer preferences. They explore the comprehensive report which surveyed over 4,000 respondents, examining demographics, popular model providers, and developer pain points when using AI tools. The discussion highlights the dominance of tools like ChatGPT, Claude, and Microsoft Copilot, while also discovering lesser-known tools such as Phind, Qwen, Zed, and Void, which sparked curiosity about the rapidly expanding AI tooling ecosystem. Throughout their conversation, they reflect on how these tools have transformed their own workflows, particularly for code generation, summarization, and research purposes. What makes this discussion particularly valuable is the candid assessment of both the strengths and limitations of current AI models. They discuss common pain points including hallucinations, context limitations, and code quality issues, while noting that many of these problems are being addressed as models continue to improve. The duo examines how AI is impacting development workflows at different scales, from individual developers to team-wide adoption, referencing the DORA report which suggests that generative AI might actually have negative impacts on software delivery at organizational levels despite individual productivity gains. The conversation concludes with an exploration of Google's Notebook LM tool, which they demonstrate as a powerful resource for synthesizing information from multiple sources, highlighting the evolving landscape of AI tools designed to help knowledge workers manage and make sense of abundant information.","In this engaging conversation, Jason Hand and Ryan MacLean dive into 'The State of AI 2025' report published by Msty.ai, analyzing the current landscape of AI tools, models, and developer preferences. They explore the comprehensive report which surveyed over 4,000 respondents, examining demographics, popular model providers, and developer pain points when using AI tools. The discussion highlights the dominance of tools like ChatGPT, Claude, and Microsoft Copilot, while also discovering lesser-known tools such as Phind, Qwen, Zed, and Void, which sparked curiosity about the rapidly expanding AI tooling ecosystem. Throughout their conversation, they reflect on how these tools have transformed their own workflows, particularly for code generation, summarization, and research purposes.\r\n\r\nWhat makes this discussion particularly valuable is the candid assessment of both the strengths and limitations of current AI models. They discuss common pain points including hallucinations, context limitations, and code quality issues, while noting that many of these problems are being addressed as models continue to improve. The duo examines how AI is impacting development workflows at different scales, from individual developers to team-wide adoption, referencing the DORA report which suggests that generative AI might actually have negative impacts on software delivery at organizational levels despite individual productivity gains. The conversation concludes with an exploration of Google's Notebook LM tool, which they demonstrate as a powerful resource for synthesizing information from multiple sources, highlighting the evolving landscape of AI tools designed to help knowledge workers manage and make sense of abundant information.","src/content/episodes/ep17.mdx","18eeaf99d39add2d","ep17.mdx","ep20",{"id":1869,"data":1871,"body":1955,"filePath":1956,"digest":1957,"legacyId":1958,"deferredRender":133},{"title":1872,"description":1873,"heroImg":1874,"videoId":1875,"episodeNumber":1876,"date":1877,"author":20,"tags":1878,"takeaways":1880,"resources":1901,"jumpTo":1922,"summary":1954,"featured":58,"transcriptAvailable":133},"YOLO Coding: Migrating from Static HTML to Astro with AI Tools","In this episode, Ryan MacLean shares his weekend experiment with 'YOLO Mode' (You Only Live Once) in AI-assisted coding, where he migrated the ai-tools-lab.com website from static HTML to Astro. Ryan discusses his approach of using multiple AI models with Model Context Protocol (MCP) tools, particularly highlighting how he combined Gemini 2.5 Pro's multimodal capabilities with Claude Sonnet 3.7's web search functionality to tackle different aspects of the project.","../images/thumbnails/ep20.png","qgTu6hv6Hys",20,"2025-05-05T00:00:00.000Z",[1689,22,210,148,1879],"astro",[1881,1885,1889,1892,1896],{"text":1882,"tools":1883},"AI 'YOLO Mode' can significantly accelerate website migrations, but requires constant human supervision to prevent security risks and unwanted changes",[1135,1884],"YOLO Mode",{"text":1886,"tools":1887},"Combining different AI models (like Gemini 2.5 Pro for multimodal tasks and Claude Sonnet 3.7 for web searches) creates a more effective development workflow",[1318,44,1888],"Multimodal AI",{"text":1890,"tools":1891},"Model Context Protocol (MCP) tools like Puppeteer and Sequential Thinking in Windsurf enable AI to interact with websites and execute multi-step processes",[48,1695,1124],{"text":1893,"tools":1894},"AI models struggle with large files (like CSS) and special formats (like Base64), requiring workarounds or alternative approaches",[1143,902,1895],"Base64",{"text":1897,"tools":1898},"Long AI sessions face context window limitations; creating checkpoints and to-do lists helps maintain progress across multiple sessions",[1899,1900],"AI Context","Project Management",[1902,1906,1910,1914,1918],{"name":1903,"url":1904,"description":1905,"featured":58},"AI Tools Lab Website","https://ai-tools-lab.com","The website that was migrated from static HTML to Astro",{"name":1907,"url":1908,"description":1909,"featured":58},"Astro Documentation","https://astro.build","Static site generator used for the migration",{"name":1911,"url":1912,"description":1913,"featured":58},"Context7 Documentation Repository","https://context7.ai","Tool for accessing documentation within AI workflows",{"name":1915,"url":1916,"description":1917,"featured":58},"Vitest Testing Framework","https://vitest.dev","Testing framework mentioned for automated testing",{"name":1919,"url":1920,"description":1921,"featured":58},"Puppeteer MCP","https://github.com/puppeteer/puppeteer","Model Context Protocol tool for browser automation",[1923,1926,1929,1932,1935,1938,1941,1944,1947,1951],{"title":1924,"url":1925,"timestamp":71},"Introduction and YOLO Mode Coding","https://www.youtube.com/watch?v=qgTu6hv6Hys?t=0",{"title":1927,"url":1928,"timestamp":1258},"Overview of the HTML to Astro Migration Project","https://www.youtube.com/watch?v=qgTu6hv6Hys?t=60",{"title":1930,"url":1931,"timestamp":83},"Visual Comparison Challenges and CSS Issues","https://www.youtube.com/watch?v=qgTu6hv6Hys?t=180",{"title":1933,"url":1934,"timestamp":284},"Switching Between AI Models for Different Tasks","https://www.youtube.com/watch?v=qgTu6hv6Hys?t=300",{"title":1936,"url":1937,"timestamp":1009},"Setting Up MCPs in Windsurf (Puppeteer and Sequential Thinking)","https://www.youtube.com/watch?v=qgTu6hv6Hys?t=420",{"title":1939,"url":1940,"timestamp":1575},"Safety Concerns with AI Auto-Approving Commands","https://www.youtube.com/watch?v=qgTu6hv6Hys?t=660",{"title":1942,"url":1943,"timestamp":107},"Memory Management and Context Windows","https://www.youtube.com/watch?v=qgTu6hv6Hys?t=900",{"title":1945,"url":1946,"timestamp":558},"Using Context7 for Documentation Access","https://www.youtube.com/watch?v=qgTu6hv6Hys?t=1080",{"title":1948,"url":1949,"timestamp":1950},"Maintaining To-Do Lists and Progress Tracking","https://www.youtube.com/watch?v=qgTu6hv6Hys?t=1320","00:22:00",{"title":1952,"url":1953,"timestamp":570},"Final Thoughts on AI-Assisted Site Migration","https://www.youtube.com/watch?v=qgTu6hv6Hys?t=1620","In this episode, Ryan MacLean shares his weekend experiment with 'YOLO Mode' (You Only Live Once) in AI-assisted coding, where he migrated the ai-tools-lab.com website from static HTML to Astro. Ryan discusses his approach of using multiple AI models with Model Context Protocol (MCP) tools, particularly highlighting how he combined Gemini 2.5 Pro's multimodal capabilities with Claude Sonnet 3.7's web search functionality to tackle different aspects of the project. Ryan explains the challenges he faced, including models struggling with large CSS files and Base64-encoded graphics, and reveals his workflow using Puppeteer and Sequential Thinking MCPs in Windsurf to compare and migrate the site effectively. Throughout the conversation, Ryan emphasizes the importance of vigilant oversight when allowing AI tools to execute commands, especially around version control and API keys. He demonstrates how to set up MCPs in Windsurf, add Context7 for documentation access, and use to-do lists to checkpoint progress across lengthy AI sessions. Despite some visual discrepancies in the migrated site, Ryan found the process incredibly educational, allowing him to simultaneously learn Astro, improve his testing methodology with Vitest, automate deployments with Netlify, and enhance his work with Claude. Jason Hand, who initially suggested using AI for the migration, expresses excitement about how quickly they've been able to move from a static HTML site to a more maintainable content management system using these AI-powered development approaches.","In this episode, Ryan MacLean shares his weekend experiment with 'YOLO Mode' (You Only Live Once) in AI-assisted coding, where he migrated the ai-tools-lab.com website from static HTML to Astro. Ryan discusses his approach of using multiple AI models with Model Context Protocol (MCP) tools, particularly highlighting how he combined Gemini 2.5 Pro's multimodal capabilities with Claude Sonnet 3.7's web search functionality to tackle different aspects of the project. Ryan explains the challenges he faced, including models struggling with large CSS files and Base64-encoded graphics, and reveals his workflow using Puppeteer and Sequential Thinking MCPs in Windsurf to compare and migrate the site effectively. \r\n\r\nThroughout the conversation, Ryan emphasizes the importance of vigilant oversight when allowing AI tools to execute commands, especially around version control and API keys. He demonstrates how to set up MCPs in Windsurf, add Context7 for documentation access, and use to-do lists to checkpoint progress across lengthy AI sessions. Despite some visual discrepancies in the migrated site, Ryan found the process incredibly educational, allowing him to simultaneously learn Astro, improve his testing methodology with Vitest, automate deployments with Netlify, and enhance his work with Claude. Jason Hand, who initially suggested using AI for the migration, expresses excitement about how quickly they've been able to move from a static HTML site to a more maintainable content management system using these AI-powered development approaches.","src/content/episodes/ep20.mdx","406901aed7dae00c","ep20.mdx","ep24",{"id":1959,"data":1961,"body":2039,"filePath":2040,"digest":2041,"legacyId":2042,"deferredRender":133},{"title":1962,"description":1963,"heroImg":1964,"videoId":1965,"episodeNumber":1966,"date":1967,"author":20,"tags":1968,"takeaways":1969,"resources":1985,"jumpTo":1998,"featured":58,"transcriptAvailable":133},"Streamlining AI Report Analysis: Figma AI 2025 Insights","The video discusses the challenges of keeping up with numerous 'State Of' or report PDFs, focusing on a specific AI report by Figma concerning the state of AI in 2025. Ryan MacLean explains how these reports, while informative, can be overwhelming due to their volume and the effort required to distill critical conclusions. Using the Claude Desktop app on Mac OS, Ryan demonstrates uploading and summarizing this AI report to draw meaningful insights efficiently.","../images/thumbnails/ep24.png","h9a-J2x-iog",24,"2025-05-05",[148,1786,150],[1970,1973,1976,1979,1982],{"text":1971,"tools":1972},"**Efficiently summarizing large reports** can save time and reveal essential insights",[148],{"text":1974,"tools":1975},"Tools like **Claude can help create visual aids** such as infographics for presenting data",[148],{"text":1977,"tools":1978},"**Critical analysis and comparison** of reports can uncover unique insights and trends",[148],{"text":1980,"tools":1981},"**Effective data presentation** in professional settings requires clarity and precision",[148],{"text":1983,"tools":1984},"**Integrating findings from multiple reports** provides a comprehensive view of industry trends",[148],[1986,1990,1994],{"name":1987,"url":1988,"description":1989,"featured":58},"Figma AI Report 2025","https://www.figma.com/reports/ai-2025/","Figma's comprehensive report on the state of AI in 2025, focusing on design and development trends",{"name":1991,"url":1992,"description":1993,"featured":58},"McKinsey 'The State of AI: How organizations are rewiring to capture value' Report","https://www.mckinsey.com/capabilities/quantumblack/our-insights/the-state-of-ai","McKinsey's analysis of how organizations are implementing AI to capture business value",{"name":1995,"url":1996,"description":1997,"featured":58},"XB Software Generative AI in Software Development: 2024 Impact and 2025 Predictions","https://xbsoftware.com/blog/ai-in-software-development/","Industry report on the impact of generative AI in software development with future predictions",[1999,2003,2007,2011,2015,2019,2023,2027,2031,2035],{"title":2000,"url":2001,"timestamp":2002},"Introduction to Report Analysis","https://youtu.be/h9a-J2x-iog?t=0","0:00",{"title":2004,"url":2005,"timestamp":2006},"Challenges of Multiple Reports","https://youtu.be/h9a-J2x-iog?t=20","0:20",{"title":2008,"url":2009,"timestamp":2010},"Using Claude Desktop for Summarization","https://youtu.be/h9a-J2x-iog?t=40","0:40",{"title":2012,"url":2013,"timestamp":2014},"Importance of Critical Analysis","https://youtu.be/h9a-J2x-iog?t=60","1:00",{"title":2016,"url":2017,"timestamp":2018},"Comparing Figma with Other Reports","https://youtu.be/h9a-J2x-iog?t=80","1:20",{"title":2020,"url":2021,"timestamp":2022},"Infographic Creation and Adjustments","https://youtu.be/h9a-J2x-iog?t=100","1:40",{"title":2024,"url":2025,"timestamp":2026},"Professional Data Presentation","https://youtu.be/h9a-J2x-iog?t=120","2:00",{"title":2028,"url":2029,"timestamp":2030},"Key Findings from AI Reports","https://youtu.be/h9a-J2x-iog?t=140","2:20",{"title":2032,"url":2033,"timestamp":2034},"Integrating Multiple Perspectives","https://youtu.be/h9a-J2x-iog?t=160","2:40",{"title":2036,"url":2037,"timestamp":2038},"Final Thoughts and Advice","https://youtu.be/h9a-J2x-iog?t=180","3:00","The video discusses the challenges of keeping up with numerous \"State Of\" or report PDFs, focusing on a specific AI report by Figma concerning the state of AI in 2025. Ryan explains how these reports, while informative, can be overwhelming due to their volume and the effort required to distill critical conclusions. Using the Claude Desktop app on Mac OS, Ryan demonstrates uploading and summarizing this AI report to draw meaningful insights efficiently. Key elements such as important observations, citations, and resource links are highlighted as part of a critical approach to understanding various perspectives and comparing them to other reports like one from McKinsey, enabling a comprehensive understanding of AI trends. Despite the advantage of having auto-generated summaries, Ryan emphasizes the need for detailed exploration of reports and cautious presentation of data in professional settings.\r\n\r\nFurthermore, Ryan highlights the usefulness of tools like Claude for creating infographics from report data, which is crucial for effectively communicating findings in boardroom settings. Highlighting specific data points, such as the percentage of companies planning increased AI investments by 2025, illustrates the potential impact of AI proliferation. Ryan stresses the importance of context by comparing multiple reports and integrating findings, thus providing a holistic view of the AI landscape. This method allows users to discern discrepancies or blind spots in data interpretation, ensuring more robust conclusions.","src/content/episodes/ep24.mdx","d0a5741117664c24","ep24.mdx","ep26",{"id":2043,"data":2045,"body":2131,"filePath":2132,"digest":2133,"legacyId":2134,"deferredRender":133},{"title":2046,"description":2047,"heroImg":2048,"videoId":2049,"episodeNumber":2050,"date":2051,"author":20,"tags":2052,"takeaways":2057,"resources":2074,"jumpTo":2094,"featured":58,"transcriptAvailable":133},"Automating Content Transformation with N8N and Generative AI","In this video, Jason Hand discusses his innovative use of automation tools, specifically N8N, to enhance productivity in AI content transformation. He details the process of creating workflows that automate various tasks related to AI Tools Lab projects he works on. Initially, he describes a workflow designed to generate a set of artifacts from a video and its transcript. This involves creating episode images, moving files, and utilizing agents for content manipulation. However, Jason shifts the focus to additional utility from the content by sending follow-up questions to interview guests, capturing their answers in Airtable, and using this data to produce more content.","../images/thumbnails/ep26.png","0jCd_Rcyl3I",26,"2025-05-07",[2053,2054,2055,2056],"n8n","automation","airtable","workflow",[2058,2061,2064,2067,2071],{"text":2059,"tools":2060},"**N8N automation** can significantly streamline workflow processes in content transformation",[2053],{"text":2062,"tools":2063},"Using **Airtable for tracking and managing data** from interviews enhances the content's depth and accuracy",[2055],{"text":2065,"tools":2066},"**Automation can help maintain consistency** and quality in content output through structured frameworks",[2053,2055],{"text":2068,"tools":2069},"**Experimenting with different AI models** can offer insights into performance and cost-effectiveness",[2070,148],"openai",{"text":2072,"tools":2073},"**Continual workflow adjustments** are crucial to meet evolving project needs and technological advancements",[2053],[2075,2079,2083,2087,2091],{"name":2076,"url":2077,"description":2078,"featured":58},"N8N Automation Tool","https://n8n.io/","Open-source workflow automation tool for connecting apps and automating tasks",{"name":2080,"url":2081,"description":2082,"featured":58},"Airtable","https://airtable.com/","Cloud collaboration service that combines the features of a database with a spreadsheet",{"name":2084,"url":2085,"description":2086,"featured":58},"OpenAI Models","https://openai.com/","AI models and API services for various applications including content generation",{"name":2088,"url":2089,"description":2090,"featured":58},"Astro Markdown","https://astro.build/","Static site generator with built-in markdown support for content management",{"name":1493,"url":2092,"description":2093,"featured":58},"https://www.google.com/drive/","Cloud storage service for file storage and collaboration",[2095,2098,2101,2104,2107,2111,2115,2119,2123,2127],{"title":2096,"url":2097,"timestamp":2002},"Introduction to N8N and AI Tools Lab","https://youtu.be/0jCd_Rcyl3I?t=0",{"title":2099,"url":2100,"timestamp":2014},"Automating Content transformation","https://youtu.be/0jCd_Rcyl3I?t=60",{"title":2102,"url":2103,"timestamp":2026},"Leveraging Airtable for Data Management","https://youtu.be/0jCd_Rcyl3I?t=120",{"title":2105,"url":2106,"timestamp":2038},"Generating Interview Questions","https://youtu.be/0jCd_Rcyl3I?t=180",{"title":2108,"url":2109,"timestamp":2110},"Processing Guest Responses","https://youtu.be/0jCd_Rcyl3I?t=240","4:00",{"title":2112,"url":2113,"timestamp":2114},"Drafting Blog Posts from Interviews","https://youtu.be/0jCd_Rcyl3I?t=300","5:00",{"title":2116,"url":2117,"timestamp":2118},"Image Generation and Customization","https://youtu.be/0jCd_Rcyl3I?t=360","6:00",{"title":2120,"url":2121,"timestamp":2122},"Integration with Google Drive","https://youtu.be/0jCd_Rcyl3I?t=420","7:00",{"title":2124,"url":2125,"timestamp":2126},"Exploring AI Models and Tools","https://youtu.be/0jCd_Rcyl3I?t=480","8:00",{"title":2128,"url":2129,"timestamp":2130},"Planning Future Workflow Enhancements","https://youtu.be/0jCd_Rcyl3I?t=540","9:00","In this video, Jason Hand discusses his innovative use of automation tools, specifically N8N, to enhance productivity in AI content transformation. He details the process of creating workflows that automate various tasks related to AI Tools Lab projects he works on. Initially, he describes a workflow designed to generate a set of artifacts from a video and its transcript. This involves creating episode images, moving files, and utilizing agents for content manipulation. However, Jason shifts the focus to additional utility from the content by sending follow-up questions to interview guests, capturing their answers in Airtable, and using this data to produce more content.\r\n\r\nJason elaborates on the automated systems that manage these tasks, including workflows that generate interview questions, send them to guests, and integrate their responses back into Airtable. From there, another system drafts a blog post combining transcript data and guest insights, stored in Google Drive, alongside a hero image. He demonstrates how tweaks, such as avoiding text in images, are addressed through prompt adjustments. Further efforts involve exploring different AI models like Gemini 2.0 and managing ongoing content requirements with markdown files in Astro. Through his walkthrough, Jason highlights the potential for automation in streamlining content production workflows.","src/content/episodes/ep26.mdx","c298f5bfd720617a","ep26.mdx","ep27",{"id":2135,"data":2137,"body":2218,"filePath":2219,"digest":2220,"legacyId":2221,"deferredRender":133},{"title":2138,"description":2139,"heroImg":2140,"videoId":2141,"episodeNumber":2142,"date":2143,"author":20,"tags":2144,"takeaways":2149,"resources":2165,"jumpTo":2181,"featured":58,"transcriptAvailable":133},"Exploring Coding Efficiency: Utilizing Tmux and Claude Code for AI-Powered Ray Tracing","In this video, Jason Hand and Scott Gerring dive into the benefits and innovations surrounding coding tools like Tmux, Helix, and particularly Claude Code. Scott shares his journey of embracing new technologies that allow programmers to guide AI in developing complex projects such as ray tracing without manually altering the code. He explains how these tools can integrate seamlessly into a programmer's existing setup by utilizing terminal multiplexers like Tmux to enhance productivity.","../images/thumbnails/ep27.png","qCW1n79Thgo",27,"2025-05-08",[2145,2146,2147,2148],"tmux","claude-code","terminal","helix",[2150,2153,2156,2159,2162],{"text":2151,"tools":2152},"**Embrace new technologies** like terminal-based editing tools that increase productivity",[2145,2148],{"text":2154,"tools":2155},"**Claude Code facilitates complex project completion** through effective use of AI",[2146],{"text":2157,"tools":2158},"**Creating an elaborate setup** leads to better management of large projects",[2145,2146],{"text":2160,"tools":2161},"Using **detailed project logs** can assist in identifying errors and improving workflow",[2146],{"text":2163,"tools":2164},"The utility of **test coverage checks** helps maintain code reliability during development",[2146],[2166,2170,2174,2177],{"name":2167,"url":2168,"description":2169,"featured":58},"Tmux Official Page","https://github.com/tmux/tmux/wiki","Terminal multiplexer for splitting windows and managing sessions",{"name":2171,"url":2172,"description":2173,"featured":58},"Helix Editor","https://github.com/helix-editor/helix","A post-modern text editor built with Rust",{"name":672,"url":2175,"description":2176,"featured":58},"https://www.anthropic.com/claude","AI-powered coding assistant from Anthropic",{"name":2178,"url":2179,"description":2180,"featured":58},"Rust Test Coverage","https://doc.rust-lang.org/cargo/commands/cargo-test.html","Information on testing and code coverage in Rust projects",[2182,2184,2188,2191,2195,2199,2203,2206,2210,2214],{"title":364,"url":2183,"timestamp":2002},"https://youtu.be/qCW1n79Thgo?t=0",{"title":2185,"url":2186,"timestamp":2187},"Enthusiasm for New Tools","https://youtu.be/qCW1n79Thgo?t=13","0:13",{"title":2189,"url":2190,"timestamp":2014},"Transitioning from VS Code","https://youtu.be/qCW1n79Thgo?t=60",{"title":2192,"url":2193,"timestamp":2194},"Introduction to Tmux","https://youtu.be/qCW1n79Thgo?t=94","1:34",{"title":2196,"url":2197,"timestamp":2198},"Setting Up Development Environment","https://youtu.be/qCW1n79Thgo?t=165","2:45",{"title":2200,"url":2201,"timestamp":2202},"Using Claude Code","https://youtu.be/qCW1n79Thgo?t=245","4:05",{"title":2204,"url":2205,"timestamp":2114},"Project Exploration with Ray Tracing","https://youtu.be/qCW1n79Thgo?t=300",{"title":2207,"url":2208,"timestamp":2209},"Problem Solving With Prompts","https://youtu.be/qCW1n79Thgo?t=405","6:45",{"title":2211,"url":2212,"timestamp":2213},"Test Coverage Verification Practices","https://youtu.be/qCW1n79Thgo?t=510","8:30",{"title":2215,"url":2216,"timestamp":2217},"Examination of Program Output","https://youtu.be/qCW1n79Thgo?t=630","10:30","In this video, Jason Hand and Scott Gerring dive into the benefits and innovations surrounding coding tools like Tmux, Helix, and particularly Claude Code. Scott shares his journey of embracing new technologies that allow programmers to guide AI in developing complex projects such as ray tracing without manually altering the code. He explains how these tools can integrate seamlessly into a programmer's existing setup by utilizing terminal multiplexers like Tmux to enhance productivity.\r\n\r\nScott further elaborates on using Claude Code within his workflow, allowing for an automated yet structured approach where high-level prompts guide the AI's coding process. The emphasis is on the importance of creating a thorough conceptual framework before letting AI execute tasks autonomously. Using real-time interaction with these tools, Scott highlights their effectiveness in handling complex queries in large code bases while saving time and elevating project complexity with minimal human supervision.","src/content/episodes/ep27.mdx","9a9bbd78dc402a74","ep27.mdx"]